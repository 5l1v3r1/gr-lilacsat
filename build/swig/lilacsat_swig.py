# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_lilacsat_swig', [dirname(__file__)])
        except ImportError:
            import _lilacsat_swig
            return _lilacsat_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_lilacsat_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _lilacsat_swig = swig_import_helper()
    del swig_import_helper
else:
    import _lilacsat_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
  """high_res_timer_now() -> gr::high_res_timer_type"""
  return _lilacsat_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
  """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
  return _lilacsat_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
  """high_res_timer_tps() -> gr::high_res_timer_type"""
  return _lilacsat_swig.high_res_timer_tps()

def high_res_timer_epoch():
  """high_res_timer_epoch() -> gr::high_res_timer_type"""
  return _lilacsat_swig.high_res_timer_epoch()
class afsk1200_rx_f(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> afsk1200_rx_f_sptr

        Return a shared_ptr to a new instance of lilacsat::afsk1200_rx_f.

        To avoid accidental use of raw pointers, lilacsat::afsk1200_rx_f's constructor is in a private implementation class. lilacsat::afsk1200_rx_f::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.afsk1200_rx_f_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_afsk1200_rx_f
    __del__ = lambda self : None;
afsk1200_rx_f_swigregister = _lilacsat_swig.afsk1200_rx_f_swigregister
afsk1200_rx_f_swigregister(afsk1200_rx_f)

def afsk1200_rx_f_make():
  """
    afsk1200_rx_f_make() -> afsk1200_rx_f_sptr

    Return a shared_ptr to a new instance of lilacsat::afsk1200_rx_f.

    To avoid accidental use of raw pointers, lilacsat::afsk1200_rx_f's constructor is in a private implementation class. lilacsat::afsk1200_rx_f::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.afsk1200_rx_f_make()

class afsk1200_rx_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::afsk1200_rx_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::afsk1200_rx_f)> self) -> afsk1200_rx_f_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::afsk1200_rx_f)> self, afsk1200_rx_f p) -> afsk1200_rx_f_sptr
        """
        this = _lilacsat_swig.new_afsk1200_rx_f_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(afsk1200_rx_f_sptr self) -> afsk1200_rx_f"""
        return _lilacsat_swig.afsk1200_rx_f_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_afsk1200_rx_f_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(afsk1200_rx_f_sptr self) -> afsk1200_rx_f_sptr

        Return a shared_ptr to a new instance of lilacsat::afsk1200_rx_f.

        To avoid accidental use of raw pointers, lilacsat::afsk1200_rx_f's constructor is in a private implementation class. lilacsat::afsk1200_rx_f::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_make(self)

    def history(self):
        """history(afsk1200_rx_f_sptr self) -> unsigned int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(afsk1200_rx_f_sptr self, int which, int delay)
        declare_sample_delay(afsk1200_rx_f_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(afsk1200_rx_f_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(afsk1200_rx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(afsk1200_rx_f_sptr self) -> double"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_relative_rate(self)

    def start(self):
        """start(afsk1200_rx_f_sptr self) -> bool"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_start(self)

    def stop(self):
        """stop(afsk1200_rx_f_sptr self) -> bool"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(afsk1200_rx_f_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(afsk1200_rx_f_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(afsk1200_rx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(afsk1200_rx_f_sptr self, int m)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(afsk1200_rx_f_sptr self)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(afsk1200_rx_f_sptr self) -> bool"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(afsk1200_rx_f_sptr self, int m)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(afsk1200_rx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(afsk1200_rx_f_sptr self, int i) -> long"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(afsk1200_rx_f_sptr self, long max_output_buffer)
        set_max_output_buffer(afsk1200_rx_f_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(afsk1200_rx_f_sptr self, int i) -> long"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(afsk1200_rx_f_sptr self, long min_output_buffer)
        set_min_output_buffer(afsk1200_rx_f_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(afsk1200_rx_f_sptr self, int which) -> float
        pc_input_buffers_full(afsk1200_rx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(afsk1200_rx_f_sptr self, int which) -> float
        pc_input_buffers_full_avg(afsk1200_rx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(afsk1200_rx_f_sptr self, int which) -> float
        pc_input_buffers_full_var(afsk1200_rx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(afsk1200_rx_f_sptr self, int which) -> float
        pc_output_buffers_full(afsk1200_rx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(afsk1200_rx_f_sptr self, int which) -> float
        pc_output_buffers_full_avg(afsk1200_rx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(afsk1200_rx_f_sptr self, int which) -> float
        pc_output_buffers_full_var(afsk1200_rx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(afsk1200_rx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(afsk1200_rx_f_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(afsk1200_rx_f_sptr self)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(afsk1200_rx_f_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(afsk1200_rx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(afsk1200_rx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(afsk1200_rx_f_sptr self, int priority) -> int"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(afsk1200_rx_f_sptr self) -> std::string"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_name(self)

    def symbol_name(self):
        """symbol_name(afsk1200_rx_f_sptr self) -> std::string"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(afsk1200_rx_f_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(afsk1200_rx_f_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(afsk1200_rx_f_sptr self) -> long"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(afsk1200_rx_f_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(afsk1200_rx_f_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(afsk1200_rx_f_sptr self) -> std::string"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(afsk1200_rx_f_sptr self, std::string name)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(afsk1200_rx_f_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.afsk1200_rx_f_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(afsk1200_rx_f_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(afsk1200_rx_f_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(afsk1200_rx_f_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.afsk1200_rx_f_sptr_message_subscribers(self, *args, **kwargs)

afsk1200_rx_f_sptr_swigregister = _lilacsat_swig.afsk1200_rx_f_sptr_swigregister
afsk1200_rx_f_sptr_swigregister(afsk1200_rx_f_sptr)

afsk1200_rx_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
afsk1200_rx_f = afsk1200_rx_f.make;

class afsk1200_tx_f(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(std::string const & destination, std::string const & source, std::string const & repeater1, 
            std::string const & repeater2, bool padding_zero) -> afsk1200_tx_f_sptr

        Return a shared_ptr to a new instance of lilacsat::afsk1200_tx_f.

        To avoid accidental use of raw pointers, lilacsat::afsk1200_tx_f's constructor is in a private implementation class. lilacsat::afsk1200_tx_f::make is the public interface for creating new instances.

        Params: (destination, source, repeater1, repeater2, padding_zero)
        """
        return _lilacsat_swig.afsk1200_tx_f_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_afsk1200_tx_f
    __del__ = lambda self : None;
afsk1200_tx_f_swigregister = _lilacsat_swig.afsk1200_tx_f_swigregister
afsk1200_tx_f_swigregister(afsk1200_tx_f)

def afsk1200_tx_f_make(*args, **kwargs):
  """
    afsk1200_tx_f_make(std::string const & destination, std::string const & source, std::string const & repeater1, 
        std::string const & repeater2, bool padding_zero) -> afsk1200_tx_f_sptr

    Return a shared_ptr to a new instance of lilacsat::afsk1200_tx_f.

    To avoid accidental use of raw pointers, lilacsat::afsk1200_tx_f's constructor is in a private implementation class. lilacsat::afsk1200_tx_f::make is the public interface for creating new instances.

    Params: (destination, source, repeater1, repeater2, padding_zero)
    """
  return _lilacsat_swig.afsk1200_tx_f_make(*args, **kwargs)

class afsk1200_tx_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::afsk1200_tx_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::afsk1200_tx_f)> self) -> afsk1200_tx_f_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::afsk1200_tx_f)> self, afsk1200_tx_f p) -> afsk1200_tx_f_sptr
        """
        this = _lilacsat_swig.new_afsk1200_tx_f_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(afsk1200_tx_f_sptr self) -> afsk1200_tx_f"""
        return _lilacsat_swig.afsk1200_tx_f_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_afsk1200_tx_f_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(afsk1200_tx_f_sptr self, std::string const & destination, std::string const & source, std::string const & repeater1, 
            std::string const & repeater2, bool padding_zero) -> afsk1200_tx_f_sptr

        Return a shared_ptr to a new instance of lilacsat::afsk1200_tx_f.

        To avoid accidental use of raw pointers, lilacsat::afsk1200_tx_f's constructor is in a private implementation class. lilacsat::afsk1200_tx_f::make is the public interface for creating new instances.

        Params: (destination, source, repeater1, repeater2, padding_zero)
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(afsk1200_tx_f_sptr self) -> unsigned int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(afsk1200_tx_f_sptr self, int which, int delay)
        declare_sample_delay(afsk1200_tx_f_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(afsk1200_tx_f_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(afsk1200_tx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(afsk1200_tx_f_sptr self) -> double"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_relative_rate(self)

    def start(self):
        """start(afsk1200_tx_f_sptr self) -> bool"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_start(self)

    def stop(self):
        """stop(afsk1200_tx_f_sptr self) -> bool"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(afsk1200_tx_f_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(afsk1200_tx_f_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(afsk1200_tx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(afsk1200_tx_f_sptr self, int m)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(afsk1200_tx_f_sptr self)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(afsk1200_tx_f_sptr self) -> bool"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(afsk1200_tx_f_sptr self, int m)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(afsk1200_tx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(afsk1200_tx_f_sptr self, int i) -> long"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(afsk1200_tx_f_sptr self, long max_output_buffer)
        set_max_output_buffer(afsk1200_tx_f_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(afsk1200_tx_f_sptr self, int i) -> long"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(afsk1200_tx_f_sptr self, long min_output_buffer)
        set_min_output_buffer(afsk1200_tx_f_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(afsk1200_tx_f_sptr self, int which) -> float
        pc_input_buffers_full(afsk1200_tx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(afsk1200_tx_f_sptr self, int which) -> float
        pc_input_buffers_full_avg(afsk1200_tx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(afsk1200_tx_f_sptr self, int which) -> float
        pc_input_buffers_full_var(afsk1200_tx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(afsk1200_tx_f_sptr self, int which) -> float
        pc_output_buffers_full(afsk1200_tx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(afsk1200_tx_f_sptr self, int which) -> float
        pc_output_buffers_full_avg(afsk1200_tx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(afsk1200_tx_f_sptr self, int which) -> float
        pc_output_buffers_full_var(afsk1200_tx_f_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(afsk1200_tx_f_sptr self) -> float"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(afsk1200_tx_f_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(afsk1200_tx_f_sptr self)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(afsk1200_tx_f_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(afsk1200_tx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(afsk1200_tx_f_sptr self) -> int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(afsk1200_tx_f_sptr self, int priority) -> int"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(afsk1200_tx_f_sptr self) -> std::string"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_name(self)

    def symbol_name(self):
        """symbol_name(afsk1200_tx_f_sptr self) -> std::string"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(afsk1200_tx_f_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(afsk1200_tx_f_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(afsk1200_tx_f_sptr self) -> long"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(afsk1200_tx_f_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(afsk1200_tx_f_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(afsk1200_tx_f_sptr self) -> std::string"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(afsk1200_tx_f_sptr self, std::string name)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(afsk1200_tx_f_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.afsk1200_tx_f_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(afsk1200_tx_f_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(afsk1200_tx_f_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(afsk1200_tx_f_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.afsk1200_tx_f_sptr_message_subscribers(self, *args, **kwargs)

afsk1200_tx_f_sptr_swigregister = _lilacsat_swig.afsk1200_tx_f_sptr_swigregister
afsk1200_tx_f_sptr_swigregister(afsk1200_tx_f_sptr)

afsk1200_tx_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
afsk1200_tx_f = afsk1200_tx_f.make;

class fec_decode_b(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int frame_len, bool using_m, bool using_convolutional_code, bool pass_all) -> fec_decode_b_sptr

        Return a shared_ptr to a new instance of lilacsat::fec_decode_b.

        To avoid accidental use of raw pointers, lilacsat::fec_decode_b's constructor is in a private implementation class. lilacsat::fec_decode_b::make is the public interface for creating new instances.

        Params: (frame_len, using_m, using_convolutional_code, pass_all)
        """
        return _lilacsat_swig.fec_decode_b_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_fec_decode_b
    __del__ = lambda self : None;
fec_decode_b_swigregister = _lilacsat_swig.fec_decode_b_swigregister
fec_decode_b_swigregister(fec_decode_b)

def fec_decode_b_make(*args, **kwargs):
  """
    fec_decode_b_make(int frame_len, bool using_m, bool using_convolutional_code, bool pass_all) -> fec_decode_b_sptr

    Return a shared_ptr to a new instance of lilacsat::fec_decode_b.

    To avoid accidental use of raw pointers, lilacsat::fec_decode_b's constructor is in a private implementation class. lilacsat::fec_decode_b::make is the public interface for creating new instances.

    Params: (frame_len, using_m, using_convolutional_code, pass_all)
    """
  return _lilacsat_swig.fec_decode_b_make(*args, **kwargs)

class fec_decode_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::fec_decode_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::fec_decode_b)> self) -> fec_decode_b_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::fec_decode_b)> self, fec_decode_b p) -> fec_decode_b_sptr
        """
        this = _lilacsat_swig.new_fec_decode_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(fec_decode_b_sptr self) -> fec_decode_b"""
        return _lilacsat_swig.fec_decode_b_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_fec_decode_b_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(fec_decode_b_sptr self, int frame_len, bool using_m, bool using_convolutional_code, bool pass_all) -> fec_decode_b_sptr

        Return a shared_ptr to a new instance of lilacsat::fec_decode_b.

        To avoid accidental use of raw pointers, lilacsat::fec_decode_b's constructor is in a private implementation class. lilacsat::fec_decode_b::make is the public interface for creating new instances.

        Params: (frame_len, using_m, using_convolutional_code, pass_all)
        """
        return _lilacsat_swig.fec_decode_b_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(fec_decode_b_sptr self) -> unsigned int"""
        return _lilacsat_swig.fec_decode_b_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(fec_decode_b_sptr self, int which, int delay)
        declare_sample_delay(fec_decode_b_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.fec_decode_b_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(fec_decode_b_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.fec_decode_b_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(fec_decode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_decode_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(fec_decode_b_sptr self) -> double"""
        return _lilacsat_swig.fec_decode_b_sptr_relative_rate(self)

    def start(self):
        """start(fec_decode_b_sptr self) -> bool"""
        return _lilacsat_swig.fec_decode_b_sptr_start(self)

    def stop(self):
        """stop(fec_decode_b_sptr self) -> bool"""
        return _lilacsat_swig.fec_decode_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(fec_decode_b_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.fec_decode_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(fec_decode_b_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.fec_decode_b_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(fec_decode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_decode_b_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(fec_decode_b_sptr self, int m)"""
        return _lilacsat_swig.fec_decode_b_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(fec_decode_b_sptr self)"""
        return _lilacsat_swig.fec_decode_b_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(fec_decode_b_sptr self) -> bool"""
        return _lilacsat_swig.fec_decode_b_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(fec_decode_b_sptr self, int m)"""
        return _lilacsat_swig.fec_decode_b_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(fec_decode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_decode_b_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(fec_decode_b_sptr self, int i) -> long"""
        return _lilacsat_swig.fec_decode_b_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(fec_decode_b_sptr self, long max_output_buffer)
        set_max_output_buffer(fec_decode_b_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.fec_decode_b_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(fec_decode_b_sptr self, int i) -> long"""
        return _lilacsat_swig.fec_decode_b_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(fec_decode_b_sptr self, long min_output_buffer)
        set_min_output_buffer(fec_decode_b_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.fec_decode_b_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(fec_decode_b_sptr self, int which) -> float
        pc_input_buffers_full(fec_decode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_decode_b_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(fec_decode_b_sptr self, int which) -> float
        pc_input_buffers_full_avg(fec_decode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_decode_b_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(fec_decode_b_sptr self, int which) -> float
        pc_input_buffers_full_var(fec_decode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_decode_b_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(fec_decode_b_sptr self, int which) -> float
        pc_output_buffers_full(fec_decode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_decode_b_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(fec_decode_b_sptr self, int which) -> float
        pc_output_buffers_full_avg(fec_decode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_decode_b_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(fec_decode_b_sptr self, int which) -> float
        pc_output_buffers_full_var(fec_decode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_decode_b_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(fec_decode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_decode_b_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(fec_decode_b_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.fec_decode_b_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(fec_decode_b_sptr self)"""
        return _lilacsat_swig.fec_decode_b_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(fec_decode_b_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.fec_decode_b_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(fec_decode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_decode_b_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(fec_decode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_decode_b_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(fec_decode_b_sptr self, int priority) -> int"""
        return _lilacsat_swig.fec_decode_b_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(fec_decode_b_sptr self) -> std::string"""
        return _lilacsat_swig.fec_decode_b_sptr_name(self)

    def symbol_name(self):
        """symbol_name(fec_decode_b_sptr self) -> std::string"""
        return _lilacsat_swig.fec_decode_b_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(fec_decode_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.fec_decode_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(fec_decode_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.fec_decode_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(fec_decode_b_sptr self) -> long"""
        return _lilacsat_swig.fec_decode_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(fec_decode_b_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.fec_decode_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(fec_decode_b_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.fec_decode_b_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(fec_decode_b_sptr self) -> std::string"""
        return _lilacsat_swig.fec_decode_b_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(fec_decode_b_sptr self, std::string name)"""
        return _lilacsat_swig.fec_decode_b_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(fec_decode_b_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.fec_decode_b_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(fec_decode_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.fec_decode_b_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(fec_decode_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.fec_decode_b_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(fec_decode_b_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.fec_decode_b_sptr_message_subscribers(self, *args, **kwargs)

fec_decode_b_sptr_swigregister = _lilacsat_swig.fec_decode_b_sptr_swigregister
fec_decode_b_sptr_swigregister(fec_decode_b_sptr)

fec_decode_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
fec_decode_b = fec_decode_b.make;

class fec_encode_b(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int frame_len, int preamble_len, int trailer_len, bool continous, bool padding_zero, 
            bool using_m, bool using_convolutional_code) -> fec_encode_b_sptr

        Return a shared_ptr to a new instance of lilacsat::fec_encode_b.

        To avoid accidental use of raw pointers, lilacsat::fec_encode_b's constructor is in a private implementation class. lilacsat::fec_encode_b::make is the public interface for creating new instances.

        Params: (frame_len, preamble_len, trailer_len, continous, padding_zero, using_m, using_convolutional_code)
        """
        return _lilacsat_swig.fec_encode_b_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_fec_encode_b
    __del__ = lambda self : None;
fec_encode_b_swigregister = _lilacsat_swig.fec_encode_b_swigregister
fec_encode_b_swigregister(fec_encode_b)

def fec_encode_b_make(*args, **kwargs):
  """
    fec_encode_b_make(int frame_len, int preamble_len, int trailer_len, bool continous, bool padding_zero, 
        bool using_m, bool using_convolutional_code) -> fec_encode_b_sptr

    Return a shared_ptr to a new instance of lilacsat::fec_encode_b.

    To avoid accidental use of raw pointers, lilacsat::fec_encode_b's constructor is in a private implementation class. lilacsat::fec_encode_b::make is the public interface for creating new instances.

    Params: (frame_len, preamble_len, trailer_len, continous, padding_zero, using_m, using_convolutional_code)
    """
  return _lilacsat_swig.fec_encode_b_make(*args, **kwargs)

class fec_encode_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::fec_encode_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::fec_encode_b)> self) -> fec_encode_b_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::fec_encode_b)> self, fec_encode_b p) -> fec_encode_b_sptr
        """
        this = _lilacsat_swig.new_fec_encode_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(fec_encode_b_sptr self) -> fec_encode_b"""
        return _lilacsat_swig.fec_encode_b_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_fec_encode_b_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(fec_encode_b_sptr self, int frame_len, int preamble_len, int trailer_len, bool continous, bool padding_zero, 
            bool using_m, bool using_convolutional_code) -> fec_encode_b_sptr

        Return a shared_ptr to a new instance of lilacsat::fec_encode_b.

        To avoid accidental use of raw pointers, lilacsat::fec_encode_b's constructor is in a private implementation class. lilacsat::fec_encode_b::make is the public interface for creating new instances.

        Params: (frame_len, preamble_len, trailer_len, continous, padding_zero, using_m, using_convolutional_code)
        """
        return _lilacsat_swig.fec_encode_b_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(fec_encode_b_sptr self) -> unsigned int"""
        return _lilacsat_swig.fec_encode_b_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(fec_encode_b_sptr self, int which, int delay)
        declare_sample_delay(fec_encode_b_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.fec_encode_b_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(fec_encode_b_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.fec_encode_b_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(fec_encode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_encode_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(fec_encode_b_sptr self) -> double"""
        return _lilacsat_swig.fec_encode_b_sptr_relative_rate(self)

    def start(self):
        """start(fec_encode_b_sptr self) -> bool"""
        return _lilacsat_swig.fec_encode_b_sptr_start(self)

    def stop(self):
        """stop(fec_encode_b_sptr self) -> bool"""
        return _lilacsat_swig.fec_encode_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(fec_encode_b_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.fec_encode_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(fec_encode_b_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.fec_encode_b_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(fec_encode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_encode_b_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(fec_encode_b_sptr self, int m)"""
        return _lilacsat_swig.fec_encode_b_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(fec_encode_b_sptr self)"""
        return _lilacsat_swig.fec_encode_b_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(fec_encode_b_sptr self) -> bool"""
        return _lilacsat_swig.fec_encode_b_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(fec_encode_b_sptr self, int m)"""
        return _lilacsat_swig.fec_encode_b_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(fec_encode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_encode_b_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(fec_encode_b_sptr self, int i) -> long"""
        return _lilacsat_swig.fec_encode_b_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(fec_encode_b_sptr self, long max_output_buffer)
        set_max_output_buffer(fec_encode_b_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.fec_encode_b_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(fec_encode_b_sptr self, int i) -> long"""
        return _lilacsat_swig.fec_encode_b_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(fec_encode_b_sptr self, long min_output_buffer)
        set_min_output_buffer(fec_encode_b_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.fec_encode_b_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(fec_encode_b_sptr self, int which) -> float
        pc_input_buffers_full(fec_encode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_encode_b_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(fec_encode_b_sptr self, int which) -> float
        pc_input_buffers_full_avg(fec_encode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_encode_b_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(fec_encode_b_sptr self, int which) -> float
        pc_input_buffers_full_var(fec_encode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_encode_b_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(fec_encode_b_sptr self, int which) -> float
        pc_output_buffers_full(fec_encode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_encode_b_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(fec_encode_b_sptr self, int which) -> float
        pc_output_buffers_full_avg(fec_encode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_encode_b_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(fec_encode_b_sptr self, int which) -> float
        pc_output_buffers_full_var(fec_encode_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.fec_encode_b_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(fec_encode_b_sptr self) -> float"""
        return _lilacsat_swig.fec_encode_b_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(fec_encode_b_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.fec_encode_b_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(fec_encode_b_sptr self)"""
        return _lilacsat_swig.fec_encode_b_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(fec_encode_b_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.fec_encode_b_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(fec_encode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_encode_b_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(fec_encode_b_sptr self) -> int"""
        return _lilacsat_swig.fec_encode_b_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(fec_encode_b_sptr self, int priority) -> int"""
        return _lilacsat_swig.fec_encode_b_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(fec_encode_b_sptr self) -> std::string"""
        return _lilacsat_swig.fec_encode_b_sptr_name(self)

    def symbol_name(self):
        """symbol_name(fec_encode_b_sptr self) -> std::string"""
        return _lilacsat_swig.fec_encode_b_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(fec_encode_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.fec_encode_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(fec_encode_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.fec_encode_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(fec_encode_b_sptr self) -> long"""
        return _lilacsat_swig.fec_encode_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(fec_encode_b_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.fec_encode_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(fec_encode_b_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.fec_encode_b_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(fec_encode_b_sptr self) -> std::string"""
        return _lilacsat_swig.fec_encode_b_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(fec_encode_b_sptr self, std::string name)"""
        return _lilacsat_swig.fec_encode_b_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(fec_encode_b_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.fec_encode_b_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(fec_encode_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.fec_encode_b_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(fec_encode_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.fec_encode_b_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(fec_encode_b_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.fec_encode_b_sptr_message_subscribers(self, *args, **kwargs)

fec_encode_b_sptr_swigregister = _lilacsat_swig.fec_encode_b_sptr_swigregister
fec_encode_b_sptr_swigregister(fec_encode_b_sptr)

fec_encode_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
fec_encode_b = fec_encode_b.make;

class satellite_channel_cc(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(float r_semi_long_axis, float alpha_aos, float fc, float samp_rate, float d0, bool doppler, 
            bool link_loss, bool verbose) -> satellite_channel_cc_sptr

        Return a shared_ptr to a new instance of lilacsat::satellite_channel_cc.

        To avoid accidental use of raw pointers, lilacsat::satellite_channel_cc's constructor is in a private implementation class. lilacsat::satellite_channel_cc::make is the public interface for creating new instances.

        Params: (r_semi_long_axis, alpha_aos, fc, samp_rate, d0, doppler, link_loss, verbose)
        """
        return _lilacsat_swig.satellite_channel_cc_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_satellite_channel_cc
    __del__ = lambda self : None;
satellite_channel_cc_swigregister = _lilacsat_swig.satellite_channel_cc_swigregister
satellite_channel_cc_swigregister(satellite_channel_cc)

def satellite_channel_cc_make(*args, **kwargs):
  """
    satellite_channel_cc_make(float r_semi_long_axis, float alpha_aos, float fc, float samp_rate, float d0, bool doppler, 
        bool link_loss, bool verbose) -> satellite_channel_cc_sptr

    Return a shared_ptr to a new instance of lilacsat::satellite_channel_cc.

    To avoid accidental use of raw pointers, lilacsat::satellite_channel_cc's constructor is in a private implementation class. lilacsat::satellite_channel_cc::make is the public interface for creating new instances.

    Params: (r_semi_long_axis, alpha_aos, fc, samp_rate, d0, doppler, link_loss, verbose)
    """
  return _lilacsat_swig.satellite_channel_cc_make(*args, **kwargs)

class satellite_channel_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::satellite_channel_cc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::satellite_channel_cc)> self) -> satellite_channel_cc_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::satellite_channel_cc)> self, satellite_channel_cc p) -> satellite_channel_cc_sptr
        """
        this = _lilacsat_swig.new_satellite_channel_cc_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(satellite_channel_cc_sptr self) -> satellite_channel_cc"""
        return _lilacsat_swig.satellite_channel_cc_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_satellite_channel_cc_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(satellite_channel_cc_sptr self, float r_semi_long_axis, float alpha_aos, float fc, float samp_rate, float d0, bool doppler, 
            bool link_loss, bool verbose) -> satellite_channel_cc_sptr

        Return a shared_ptr to a new instance of lilacsat::satellite_channel_cc.

        To avoid accidental use of raw pointers, lilacsat::satellite_channel_cc's constructor is in a private implementation class. lilacsat::satellite_channel_cc::make is the public interface for creating new instances.

        Params: (r_semi_long_axis, alpha_aos, fc, samp_rate, d0, doppler, link_loss, verbose)
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(satellite_channel_cc_sptr self) -> unsigned int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(satellite_channel_cc_sptr self, int which, int delay)
        declare_sample_delay(satellite_channel_cc_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(satellite_channel_cc_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(satellite_channel_cc_sptr self) -> int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(satellite_channel_cc_sptr self) -> double"""
        return _lilacsat_swig.satellite_channel_cc_sptr_relative_rate(self)

    def start(self):
        """start(satellite_channel_cc_sptr self) -> bool"""
        return _lilacsat_swig.satellite_channel_cc_sptr_start(self)

    def stop(self):
        """stop(satellite_channel_cc_sptr self) -> bool"""
        return _lilacsat_swig.satellite_channel_cc_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(satellite_channel_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.satellite_channel_cc_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(satellite_channel_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.satellite_channel_cc_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(satellite_channel_cc_sptr self) -> int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(satellite_channel_cc_sptr self, int m)"""
        return _lilacsat_swig.satellite_channel_cc_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(satellite_channel_cc_sptr self)"""
        return _lilacsat_swig.satellite_channel_cc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(satellite_channel_cc_sptr self) -> bool"""
        return _lilacsat_swig.satellite_channel_cc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(satellite_channel_cc_sptr self, int m)"""
        return _lilacsat_swig.satellite_channel_cc_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(satellite_channel_cc_sptr self) -> int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(satellite_channel_cc_sptr self, int i) -> long"""
        return _lilacsat_swig.satellite_channel_cc_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(satellite_channel_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(satellite_channel_cc_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(satellite_channel_cc_sptr self, int i) -> long"""
        return _lilacsat_swig.satellite_channel_cc_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(satellite_channel_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(satellite_channel_cc_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(satellite_channel_cc_sptr self, int which) -> float
        pc_input_buffers_full(satellite_channel_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(satellite_channel_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(satellite_channel_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(satellite_channel_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(satellite_channel_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(satellite_channel_cc_sptr self, int which) -> float
        pc_output_buffers_full(satellite_channel_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(satellite_channel_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(satellite_channel_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(satellite_channel_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(satellite_channel_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(satellite_channel_cc_sptr self) -> float"""
        return _lilacsat_swig.satellite_channel_cc_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(satellite_channel_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.satellite_channel_cc_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(satellite_channel_cc_sptr self)"""
        return _lilacsat_swig.satellite_channel_cc_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(satellite_channel_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.satellite_channel_cc_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(satellite_channel_cc_sptr self) -> int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(satellite_channel_cc_sptr self) -> int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(satellite_channel_cc_sptr self, int priority) -> int"""
        return _lilacsat_swig.satellite_channel_cc_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(satellite_channel_cc_sptr self) -> std::string"""
        return _lilacsat_swig.satellite_channel_cc_sptr_name(self)

    def symbol_name(self):
        """symbol_name(satellite_channel_cc_sptr self) -> std::string"""
        return _lilacsat_swig.satellite_channel_cc_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(satellite_channel_cc_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.satellite_channel_cc_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(satellite_channel_cc_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.satellite_channel_cc_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(satellite_channel_cc_sptr self) -> long"""
        return _lilacsat_swig.satellite_channel_cc_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(satellite_channel_cc_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.satellite_channel_cc_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(satellite_channel_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.satellite_channel_cc_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(satellite_channel_cc_sptr self) -> std::string"""
        return _lilacsat_swig.satellite_channel_cc_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(satellite_channel_cc_sptr self, std::string name)"""
        return _lilacsat_swig.satellite_channel_cc_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(satellite_channel_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.satellite_channel_cc_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(satellite_channel_cc_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.satellite_channel_cc_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(satellite_channel_cc_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.satellite_channel_cc_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(satellite_channel_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.satellite_channel_cc_sptr_message_subscribers(self, *args, **kwargs)

satellite_channel_cc_sptr_swigregister = _lilacsat_swig.satellite_channel_cc_sptr_swigregister
satellite_channel_cc_sptr_swigregister(satellite_channel_cc_sptr)

satellite_channel_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
satellite_channel_cc = satellite_channel_cc.make;

class bpsk_demod_cb(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> bpsk_demod_cb_sptr

        Return a shared_ptr to a new instance of lilacsat::bpsk_demod_cb.

        To avoid accidental use of raw pointers, lilacsat::bpsk_demod_cb's constructor is in a private implementation class. lilacsat::bpsk_demod_cb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.bpsk_demod_cb_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_bpsk_demod_cb
    __del__ = lambda self : None;
bpsk_demod_cb_swigregister = _lilacsat_swig.bpsk_demod_cb_swigregister
bpsk_demod_cb_swigregister(bpsk_demod_cb)

def bpsk_demod_cb_make():
  """
    bpsk_demod_cb_make() -> bpsk_demod_cb_sptr

    Return a shared_ptr to a new instance of lilacsat::bpsk_demod_cb.

    To avoid accidental use of raw pointers, lilacsat::bpsk_demod_cb's constructor is in a private implementation class. lilacsat::bpsk_demod_cb::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.bpsk_demod_cb_make()

class bpsk_demod_cb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::bpsk_demod_cb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::bpsk_demod_cb)> self) -> bpsk_demod_cb_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::bpsk_demod_cb)> self, bpsk_demod_cb p) -> bpsk_demod_cb_sptr
        """
        this = _lilacsat_swig.new_bpsk_demod_cb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(bpsk_demod_cb_sptr self) -> bpsk_demod_cb"""
        return _lilacsat_swig.bpsk_demod_cb_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_bpsk_demod_cb_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(bpsk_demod_cb_sptr self) -> bpsk_demod_cb_sptr

        Return a shared_ptr to a new instance of lilacsat::bpsk_demod_cb.

        To avoid accidental use of raw pointers, lilacsat::bpsk_demod_cb's constructor is in a private implementation class. lilacsat::bpsk_demod_cb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_make(self)

    def history(self):
        """history(bpsk_demod_cb_sptr self) -> unsigned int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(bpsk_demod_cb_sptr self, int which, int delay)
        declare_sample_delay(bpsk_demod_cb_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(bpsk_demod_cb_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(bpsk_demod_cb_sptr self) -> int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(bpsk_demod_cb_sptr self) -> double"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_relative_rate(self)

    def start(self):
        """start(bpsk_demod_cb_sptr self) -> bool"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_start(self)

    def stop(self):
        """stop(bpsk_demod_cb_sptr self) -> bool"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(bpsk_demod_cb_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(bpsk_demod_cb_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(bpsk_demod_cb_sptr self) -> int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(bpsk_demod_cb_sptr self, int m)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(bpsk_demod_cb_sptr self)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(bpsk_demod_cb_sptr self) -> bool"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(bpsk_demod_cb_sptr self, int m)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(bpsk_demod_cb_sptr self) -> int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(bpsk_demod_cb_sptr self, int i) -> long"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(bpsk_demod_cb_sptr self, long max_output_buffer)
        set_max_output_buffer(bpsk_demod_cb_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(bpsk_demod_cb_sptr self, int i) -> long"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(bpsk_demod_cb_sptr self, long min_output_buffer)
        set_min_output_buffer(bpsk_demod_cb_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(bpsk_demod_cb_sptr self, int which) -> float
        pc_input_buffers_full(bpsk_demod_cb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(bpsk_demod_cb_sptr self, int which) -> float
        pc_input_buffers_full_avg(bpsk_demod_cb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(bpsk_demod_cb_sptr self, int which) -> float
        pc_input_buffers_full_var(bpsk_demod_cb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(bpsk_demod_cb_sptr self, int which) -> float
        pc_output_buffers_full(bpsk_demod_cb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(bpsk_demod_cb_sptr self, int which) -> float
        pc_output_buffers_full_avg(bpsk_demod_cb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(bpsk_demod_cb_sptr self, int which) -> float
        pc_output_buffers_full_var(bpsk_demod_cb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(bpsk_demod_cb_sptr self) -> float"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(bpsk_demod_cb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(bpsk_demod_cb_sptr self)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(bpsk_demod_cb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(bpsk_demod_cb_sptr self) -> int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(bpsk_demod_cb_sptr self) -> int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(bpsk_demod_cb_sptr self, int priority) -> int"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(bpsk_demod_cb_sptr self) -> std::string"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_name(self)

    def symbol_name(self):
        """symbol_name(bpsk_demod_cb_sptr self) -> std::string"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(bpsk_demod_cb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(bpsk_demod_cb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(bpsk_demod_cb_sptr self) -> long"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(bpsk_demod_cb_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(bpsk_demod_cb_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(bpsk_demod_cb_sptr self) -> std::string"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(bpsk_demod_cb_sptr self, std::string name)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(bpsk_demod_cb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.bpsk_demod_cb_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(bpsk_demod_cb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(bpsk_demod_cb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(bpsk_demod_cb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.bpsk_demod_cb_sptr_message_subscribers(self, *args, **kwargs)

bpsk_demod_cb_sptr_swigregister = _lilacsat_swig.bpsk_demod_cb_sptr_swigregister
bpsk_demod_cb_sptr_swigregister(bpsk_demod_cb_sptr)

bpsk_demod_cb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
bpsk_demod_cb = bpsk_demod_cb.make;

class kiss_decode_pdu(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> kiss_decode_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::kiss_decode_pdu.

        To avoid accidental use of raw pointers, lilacsat::kiss_decode_pdu's constructor is in a private implementation class. lilacsat::kiss_decode_pdu::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.kiss_decode_pdu_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_kiss_decode_pdu
    __del__ = lambda self : None;
kiss_decode_pdu_swigregister = _lilacsat_swig.kiss_decode_pdu_swigregister
kiss_decode_pdu_swigregister(kiss_decode_pdu)

def kiss_decode_pdu_make():
  """
    kiss_decode_pdu_make() -> kiss_decode_pdu_sptr

    Return a shared_ptr to a new instance of lilacsat::kiss_decode_pdu.

    To avoid accidental use of raw pointers, lilacsat::kiss_decode_pdu's constructor is in a private implementation class. lilacsat::kiss_decode_pdu::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.kiss_decode_pdu_make()

class kiss_decode_pdu_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::kiss_decode_pdu)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::kiss_decode_pdu)> self) -> kiss_decode_pdu_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::kiss_decode_pdu)> self, kiss_decode_pdu p) -> kiss_decode_pdu_sptr
        """
        this = _lilacsat_swig.new_kiss_decode_pdu_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(kiss_decode_pdu_sptr self) -> kiss_decode_pdu"""
        return _lilacsat_swig.kiss_decode_pdu_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_kiss_decode_pdu_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(kiss_decode_pdu_sptr self) -> kiss_decode_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::kiss_decode_pdu.

        To avoid accidental use of raw pointers, lilacsat::kiss_decode_pdu's constructor is in a private implementation class. lilacsat::kiss_decode_pdu::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_make(self)

    def history(self):
        """history(kiss_decode_pdu_sptr self) -> unsigned int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(kiss_decode_pdu_sptr self, int which, int delay)
        declare_sample_delay(kiss_decode_pdu_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(kiss_decode_pdu_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(kiss_decode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(kiss_decode_pdu_sptr self) -> double"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_relative_rate(self)

    def start(self):
        """start(kiss_decode_pdu_sptr self) -> bool"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_start(self)

    def stop(self):
        """stop(kiss_decode_pdu_sptr self) -> bool"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(kiss_decode_pdu_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(kiss_decode_pdu_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(kiss_decode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(kiss_decode_pdu_sptr self, int m)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(kiss_decode_pdu_sptr self)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(kiss_decode_pdu_sptr self) -> bool"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(kiss_decode_pdu_sptr self, int m)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(kiss_decode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(kiss_decode_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(kiss_decode_pdu_sptr self, long max_output_buffer)
        set_max_output_buffer(kiss_decode_pdu_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(kiss_decode_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(kiss_decode_pdu_sptr self, long min_output_buffer)
        set_min_output_buffer(kiss_decode_pdu_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(kiss_decode_pdu_sptr self, int which) -> float
        pc_input_buffers_full(kiss_decode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(kiss_decode_pdu_sptr self, int which) -> float
        pc_input_buffers_full_avg(kiss_decode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(kiss_decode_pdu_sptr self, int which) -> float
        pc_input_buffers_full_var(kiss_decode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(kiss_decode_pdu_sptr self, int which) -> float
        pc_output_buffers_full(kiss_decode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(kiss_decode_pdu_sptr self, int which) -> float
        pc_output_buffers_full_avg(kiss_decode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(kiss_decode_pdu_sptr self, int which) -> float
        pc_output_buffers_full_var(kiss_decode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(kiss_decode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(kiss_decode_pdu_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(kiss_decode_pdu_sptr self)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(kiss_decode_pdu_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(kiss_decode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(kiss_decode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(kiss_decode_pdu_sptr self, int priority) -> int"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(kiss_decode_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_name(self)

    def symbol_name(self):
        """symbol_name(kiss_decode_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(kiss_decode_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(kiss_decode_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(kiss_decode_pdu_sptr self) -> long"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(kiss_decode_pdu_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(kiss_decode_pdu_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(kiss_decode_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(kiss_decode_pdu_sptr self, std::string name)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(kiss_decode_pdu_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.kiss_decode_pdu_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(kiss_decode_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(kiss_decode_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(kiss_decode_pdu_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.kiss_decode_pdu_sptr_message_subscribers(self, *args, **kwargs)

kiss_decode_pdu_sptr_swigregister = _lilacsat_swig.kiss_decode_pdu_sptr_swigregister
kiss_decode_pdu_sptr_swigregister(kiss_decode_pdu_sptr)

kiss_decode_pdu_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
kiss_decode_pdu = kiss_decode_pdu.make;

class kiss_encode_pdu(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int const_length) -> kiss_encode_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::kiss_encode_pdu.

        To avoid accidental use of raw pointers, lilacsat::kiss_encode_pdu's constructor is in a private implementation class. lilacsat::kiss_encode_pdu::make is the public interface for creating new instances.

        Params: (const_length)
        """
        return _lilacsat_swig.kiss_encode_pdu_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_kiss_encode_pdu
    __del__ = lambda self : None;
kiss_encode_pdu_swigregister = _lilacsat_swig.kiss_encode_pdu_swigregister
kiss_encode_pdu_swigregister(kiss_encode_pdu)

def kiss_encode_pdu_make(*args, **kwargs):
  """
    kiss_encode_pdu_make(int const_length) -> kiss_encode_pdu_sptr

    Return a shared_ptr to a new instance of lilacsat::kiss_encode_pdu.

    To avoid accidental use of raw pointers, lilacsat::kiss_encode_pdu's constructor is in a private implementation class. lilacsat::kiss_encode_pdu::make is the public interface for creating new instances.

    Params: (const_length)
    """
  return _lilacsat_swig.kiss_encode_pdu_make(*args, **kwargs)

class kiss_encode_pdu_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::kiss_encode_pdu)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::kiss_encode_pdu)> self) -> kiss_encode_pdu_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::kiss_encode_pdu)> self, kiss_encode_pdu p) -> kiss_encode_pdu_sptr
        """
        this = _lilacsat_swig.new_kiss_encode_pdu_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(kiss_encode_pdu_sptr self) -> kiss_encode_pdu"""
        return _lilacsat_swig.kiss_encode_pdu_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_kiss_encode_pdu_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(kiss_encode_pdu_sptr self, int const_length) -> kiss_encode_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::kiss_encode_pdu.

        To avoid accidental use of raw pointers, lilacsat::kiss_encode_pdu's constructor is in a private implementation class. lilacsat::kiss_encode_pdu::make is the public interface for creating new instances.

        Params: (const_length)
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(kiss_encode_pdu_sptr self) -> unsigned int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(kiss_encode_pdu_sptr self, int which, int delay)
        declare_sample_delay(kiss_encode_pdu_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(kiss_encode_pdu_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(kiss_encode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(kiss_encode_pdu_sptr self) -> double"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_relative_rate(self)

    def start(self):
        """start(kiss_encode_pdu_sptr self) -> bool"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_start(self)

    def stop(self):
        """stop(kiss_encode_pdu_sptr self) -> bool"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(kiss_encode_pdu_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(kiss_encode_pdu_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(kiss_encode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(kiss_encode_pdu_sptr self, int m)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(kiss_encode_pdu_sptr self)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(kiss_encode_pdu_sptr self) -> bool"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(kiss_encode_pdu_sptr self, int m)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(kiss_encode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(kiss_encode_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(kiss_encode_pdu_sptr self, long max_output_buffer)
        set_max_output_buffer(kiss_encode_pdu_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(kiss_encode_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(kiss_encode_pdu_sptr self, long min_output_buffer)
        set_min_output_buffer(kiss_encode_pdu_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(kiss_encode_pdu_sptr self, int which) -> float
        pc_input_buffers_full(kiss_encode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(kiss_encode_pdu_sptr self, int which) -> float
        pc_input_buffers_full_avg(kiss_encode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(kiss_encode_pdu_sptr self, int which) -> float
        pc_input_buffers_full_var(kiss_encode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(kiss_encode_pdu_sptr self, int which) -> float
        pc_output_buffers_full(kiss_encode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(kiss_encode_pdu_sptr self, int which) -> float
        pc_output_buffers_full_avg(kiss_encode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(kiss_encode_pdu_sptr self, int which) -> float
        pc_output_buffers_full_var(kiss_encode_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(kiss_encode_pdu_sptr self) -> float"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(kiss_encode_pdu_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(kiss_encode_pdu_sptr self)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(kiss_encode_pdu_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(kiss_encode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(kiss_encode_pdu_sptr self) -> int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(kiss_encode_pdu_sptr self, int priority) -> int"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(kiss_encode_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_name(self)

    def symbol_name(self):
        """symbol_name(kiss_encode_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(kiss_encode_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(kiss_encode_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(kiss_encode_pdu_sptr self) -> long"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(kiss_encode_pdu_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(kiss_encode_pdu_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(kiss_encode_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(kiss_encode_pdu_sptr self, std::string name)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(kiss_encode_pdu_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.kiss_encode_pdu_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(kiss_encode_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(kiss_encode_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(kiss_encode_pdu_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.kiss_encode_pdu_sptr_message_subscribers(self, *args, **kwargs)

kiss_encode_pdu_sptr_swigregister = _lilacsat_swig.kiss_encode_pdu_sptr_swigregister
kiss_encode_pdu_sptr_swigregister(kiss_encode_pdu_sptr)

kiss_encode_pdu_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
kiss_encode_pdu = kiss_encode_pdu.make;

class vitfilt27_bb(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> vitfilt27_bb_sptr

        Return a shared_ptr to a new instance of lilacsat::vitfilt27_bb.

        To avoid accidental use of raw pointers, lilacsat::vitfilt27_bb's constructor is in a private implementation class. lilacsat::vitfilt27_bb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.vitfilt27_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_vitfilt27_bb
    __del__ = lambda self : None;
vitfilt27_bb_swigregister = _lilacsat_swig.vitfilt27_bb_swigregister
vitfilt27_bb_swigregister(vitfilt27_bb)

def vitfilt27_bb_make():
  """
    vitfilt27_bb_make() -> vitfilt27_bb_sptr

    Return a shared_ptr to a new instance of lilacsat::vitfilt27_bb.

    To avoid accidental use of raw pointers, lilacsat::vitfilt27_bb's constructor is in a private implementation class. lilacsat::vitfilt27_bb::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.vitfilt27_bb_make()

class vitfilt27_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::vitfilt27_bb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::vitfilt27_bb)> self) -> vitfilt27_bb_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::vitfilt27_bb)> self, vitfilt27_bb p) -> vitfilt27_bb_sptr
        """
        this = _lilacsat_swig.new_vitfilt27_bb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(vitfilt27_bb_sptr self) -> vitfilt27_bb"""
        return _lilacsat_swig.vitfilt27_bb_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_vitfilt27_bb_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(vitfilt27_bb_sptr self) -> vitfilt27_bb_sptr

        Return a shared_ptr to a new instance of lilacsat::vitfilt27_bb.

        To avoid accidental use of raw pointers, lilacsat::vitfilt27_bb's constructor is in a private implementation class. lilacsat::vitfilt27_bb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_make(self)

    def history(self):
        """history(vitfilt27_bb_sptr self) -> unsigned int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(vitfilt27_bb_sptr self, int which, int delay)
        declare_sample_delay(vitfilt27_bb_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(vitfilt27_bb_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(vitfilt27_bb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(vitfilt27_bb_sptr self) -> double"""
        return _lilacsat_swig.vitfilt27_bb_sptr_relative_rate(self)

    def start(self):
        """start(vitfilt27_bb_sptr self) -> bool"""
        return _lilacsat_swig.vitfilt27_bb_sptr_start(self)

    def stop(self):
        """stop(vitfilt27_bb_sptr self) -> bool"""
        return _lilacsat_swig.vitfilt27_bb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(vitfilt27_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.vitfilt27_bb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(vitfilt27_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.vitfilt27_bb_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(vitfilt27_bb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(vitfilt27_bb_sptr self, int m)"""
        return _lilacsat_swig.vitfilt27_bb_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(vitfilt27_bb_sptr self)"""
        return _lilacsat_swig.vitfilt27_bb_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(vitfilt27_bb_sptr self) -> bool"""
        return _lilacsat_swig.vitfilt27_bb_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(vitfilt27_bb_sptr self, int m)"""
        return _lilacsat_swig.vitfilt27_bb_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(vitfilt27_bb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(vitfilt27_bb_sptr self, int i) -> long"""
        return _lilacsat_swig.vitfilt27_bb_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(vitfilt27_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(vitfilt27_bb_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(vitfilt27_bb_sptr self, int i) -> long"""
        return _lilacsat_swig.vitfilt27_bb_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(vitfilt27_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(vitfilt27_bb_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(vitfilt27_bb_sptr self, int which) -> float
        pc_input_buffers_full(vitfilt27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(vitfilt27_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(vitfilt27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(vitfilt27_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(vitfilt27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(vitfilt27_bb_sptr self, int which) -> float
        pc_output_buffers_full(vitfilt27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(vitfilt27_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(vitfilt27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(vitfilt27_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(vitfilt27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(vitfilt27_bb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_bb_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(vitfilt27_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.vitfilt27_bb_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(vitfilt27_bb_sptr self)"""
        return _lilacsat_swig.vitfilt27_bb_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(vitfilt27_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.vitfilt27_bb_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(vitfilt27_bb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(vitfilt27_bb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(vitfilt27_bb_sptr self, int priority) -> int"""
        return _lilacsat_swig.vitfilt27_bb_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(vitfilt27_bb_sptr self) -> std::string"""
        return _lilacsat_swig.vitfilt27_bb_sptr_name(self)

    def symbol_name(self):
        """symbol_name(vitfilt27_bb_sptr self) -> std::string"""
        return _lilacsat_swig.vitfilt27_bb_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(vitfilt27_bb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.vitfilt27_bb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(vitfilt27_bb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.vitfilt27_bb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(vitfilt27_bb_sptr self) -> long"""
        return _lilacsat_swig.vitfilt27_bb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(vitfilt27_bb_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.vitfilt27_bb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(vitfilt27_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.vitfilt27_bb_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(vitfilt27_bb_sptr self) -> std::string"""
        return _lilacsat_swig.vitfilt27_bb_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(vitfilt27_bb_sptr self, std::string name)"""
        return _lilacsat_swig.vitfilt27_bb_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(vitfilt27_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.vitfilt27_bb_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(vitfilt27_bb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.vitfilt27_bb_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(vitfilt27_bb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.vitfilt27_bb_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(vitfilt27_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.vitfilt27_bb_sptr_message_subscribers(self, *args, **kwargs)

vitfilt27_bb_sptr_swigregister = _lilacsat_swig.vitfilt27_bb_sptr_swigregister
vitfilt27_bb_sptr_swigregister(vitfilt27_bb_sptr)

vitfilt27_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
vitfilt27_bb = vitfilt27_bb.make;

class encode27_bb(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> encode27_bb_sptr

        Return a shared_ptr to a new instance of lilacsat::encode27_bb.

        To avoid accidental use of raw pointers, lilacsat::encode27_bb's constructor is in a private implementation class. lilacsat::encode27_bb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.encode27_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_encode27_bb
    __del__ = lambda self : None;
encode27_bb_swigregister = _lilacsat_swig.encode27_bb_swigregister
encode27_bb_swigregister(encode27_bb)

def encode27_bb_make():
  """
    encode27_bb_make() -> encode27_bb_sptr

    Return a shared_ptr to a new instance of lilacsat::encode27_bb.

    To avoid accidental use of raw pointers, lilacsat::encode27_bb's constructor is in a private implementation class. lilacsat::encode27_bb::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.encode27_bb_make()

class encode27_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::encode27_bb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::encode27_bb)> self) -> encode27_bb_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::encode27_bb)> self, encode27_bb p) -> encode27_bb_sptr
        """
        this = _lilacsat_swig.new_encode27_bb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(encode27_bb_sptr self) -> encode27_bb"""
        return _lilacsat_swig.encode27_bb_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_encode27_bb_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(encode27_bb_sptr self) -> encode27_bb_sptr

        Return a shared_ptr to a new instance of lilacsat::encode27_bb.

        To avoid accidental use of raw pointers, lilacsat::encode27_bb's constructor is in a private implementation class. lilacsat::encode27_bb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.encode27_bb_sptr_make(self)

    def history(self):
        """history(encode27_bb_sptr self) -> unsigned int"""
        return _lilacsat_swig.encode27_bb_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(encode27_bb_sptr self, int which, int delay)
        declare_sample_delay(encode27_bb_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.encode27_bb_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(encode27_bb_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.encode27_bb_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(encode27_bb_sptr self) -> int"""
        return _lilacsat_swig.encode27_bb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(encode27_bb_sptr self) -> double"""
        return _lilacsat_swig.encode27_bb_sptr_relative_rate(self)

    def start(self):
        """start(encode27_bb_sptr self) -> bool"""
        return _lilacsat_swig.encode27_bb_sptr_start(self)

    def stop(self):
        """stop(encode27_bb_sptr self) -> bool"""
        return _lilacsat_swig.encode27_bb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(encode27_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.encode27_bb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(encode27_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.encode27_bb_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(encode27_bb_sptr self) -> int"""
        return _lilacsat_swig.encode27_bb_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(encode27_bb_sptr self, int m)"""
        return _lilacsat_swig.encode27_bb_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(encode27_bb_sptr self)"""
        return _lilacsat_swig.encode27_bb_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(encode27_bb_sptr self) -> bool"""
        return _lilacsat_swig.encode27_bb_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(encode27_bb_sptr self, int m)"""
        return _lilacsat_swig.encode27_bb_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(encode27_bb_sptr self) -> int"""
        return _lilacsat_swig.encode27_bb_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(encode27_bb_sptr self, int i) -> long"""
        return _lilacsat_swig.encode27_bb_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(encode27_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(encode27_bb_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.encode27_bb_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(encode27_bb_sptr self, int i) -> long"""
        return _lilacsat_swig.encode27_bb_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(encode27_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(encode27_bb_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.encode27_bb_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(encode27_bb_sptr self, int which) -> float
        pc_input_buffers_full(encode27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.encode27_bb_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(encode27_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(encode27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.encode27_bb_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(encode27_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(encode27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.encode27_bb_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(encode27_bb_sptr self, int which) -> float
        pc_output_buffers_full(encode27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.encode27_bb_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(encode27_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(encode27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.encode27_bb_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(encode27_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(encode27_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.encode27_bb_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(encode27_bb_sptr self) -> float"""
        return _lilacsat_swig.encode27_bb_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(encode27_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.encode27_bb_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(encode27_bb_sptr self)"""
        return _lilacsat_swig.encode27_bb_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(encode27_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.encode27_bb_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(encode27_bb_sptr self) -> int"""
        return _lilacsat_swig.encode27_bb_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(encode27_bb_sptr self) -> int"""
        return _lilacsat_swig.encode27_bb_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(encode27_bb_sptr self, int priority) -> int"""
        return _lilacsat_swig.encode27_bb_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(encode27_bb_sptr self) -> std::string"""
        return _lilacsat_swig.encode27_bb_sptr_name(self)

    def symbol_name(self):
        """symbol_name(encode27_bb_sptr self) -> std::string"""
        return _lilacsat_swig.encode27_bb_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(encode27_bb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.encode27_bb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(encode27_bb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.encode27_bb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(encode27_bb_sptr self) -> long"""
        return _lilacsat_swig.encode27_bb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(encode27_bb_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.encode27_bb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(encode27_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.encode27_bb_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(encode27_bb_sptr self) -> std::string"""
        return _lilacsat_swig.encode27_bb_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(encode27_bb_sptr self, std::string name)"""
        return _lilacsat_swig.encode27_bb_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(encode27_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.encode27_bb_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(encode27_bb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.encode27_bb_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(encode27_bb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.encode27_bb_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(encode27_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.encode27_bb_sptr_message_subscribers(self, *args, **kwargs)

encode27_bb_sptr_swigregister = _lilacsat_swig.encode27_bb_sptr_swigregister
encode27_bb_sptr_swigregister(encode27_bb_sptr)

encode27_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
encode27_bb = encode27_bb.make;

class vitfilt27_fb(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> vitfilt27_fb_sptr

        Return a shared_ptr to a new instance of lilacsat::vitfilt27_fb.

        To avoid accidental use of raw pointers, lilacsat::vitfilt27_fb's constructor is in a private implementation class. lilacsat::vitfilt27_fb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.vitfilt27_fb_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_vitfilt27_fb
    __del__ = lambda self : None;
vitfilt27_fb_swigregister = _lilacsat_swig.vitfilt27_fb_swigregister
vitfilt27_fb_swigregister(vitfilt27_fb)

def vitfilt27_fb_make():
  """
    vitfilt27_fb_make() -> vitfilt27_fb_sptr

    Return a shared_ptr to a new instance of lilacsat::vitfilt27_fb.

    To avoid accidental use of raw pointers, lilacsat::vitfilt27_fb's constructor is in a private implementation class. lilacsat::vitfilt27_fb::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.vitfilt27_fb_make()

class vitfilt27_fb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::vitfilt27_fb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::vitfilt27_fb)> self) -> vitfilt27_fb_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::vitfilt27_fb)> self, vitfilt27_fb p) -> vitfilt27_fb_sptr
        """
        this = _lilacsat_swig.new_vitfilt27_fb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(vitfilt27_fb_sptr self) -> vitfilt27_fb"""
        return _lilacsat_swig.vitfilt27_fb_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_vitfilt27_fb_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(vitfilt27_fb_sptr self) -> vitfilt27_fb_sptr

        Return a shared_ptr to a new instance of lilacsat::vitfilt27_fb.

        To avoid accidental use of raw pointers, lilacsat::vitfilt27_fb's constructor is in a private implementation class. lilacsat::vitfilt27_fb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_make(self)

    def history(self):
        """history(vitfilt27_fb_sptr self) -> unsigned int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(vitfilt27_fb_sptr self, int which, int delay)
        declare_sample_delay(vitfilt27_fb_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(vitfilt27_fb_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(vitfilt27_fb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(vitfilt27_fb_sptr self) -> double"""
        return _lilacsat_swig.vitfilt27_fb_sptr_relative_rate(self)

    def start(self):
        """start(vitfilt27_fb_sptr self) -> bool"""
        return _lilacsat_swig.vitfilt27_fb_sptr_start(self)

    def stop(self):
        """stop(vitfilt27_fb_sptr self) -> bool"""
        return _lilacsat_swig.vitfilt27_fb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(vitfilt27_fb_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.vitfilt27_fb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(vitfilt27_fb_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.vitfilt27_fb_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(vitfilt27_fb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(vitfilt27_fb_sptr self, int m)"""
        return _lilacsat_swig.vitfilt27_fb_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(vitfilt27_fb_sptr self)"""
        return _lilacsat_swig.vitfilt27_fb_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(vitfilt27_fb_sptr self) -> bool"""
        return _lilacsat_swig.vitfilt27_fb_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(vitfilt27_fb_sptr self, int m)"""
        return _lilacsat_swig.vitfilt27_fb_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(vitfilt27_fb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(vitfilt27_fb_sptr self, int i) -> long"""
        return _lilacsat_swig.vitfilt27_fb_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(vitfilt27_fb_sptr self, long max_output_buffer)
        set_max_output_buffer(vitfilt27_fb_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(vitfilt27_fb_sptr self, int i) -> long"""
        return _lilacsat_swig.vitfilt27_fb_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(vitfilt27_fb_sptr self, long min_output_buffer)
        set_min_output_buffer(vitfilt27_fb_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(vitfilt27_fb_sptr self, int which) -> float
        pc_input_buffers_full(vitfilt27_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(vitfilt27_fb_sptr self, int which) -> float
        pc_input_buffers_full_avg(vitfilt27_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(vitfilt27_fb_sptr self, int which) -> float
        pc_input_buffers_full_var(vitfilt27_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(vitfilt27_fb_sptr self, int which) -> float
        pc_output_buffers_full(vitfilt27_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(vitfilt27_fb_sptr self, int which) -> float
        pc_output_buffers_full_avg(vitfilt27_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(vitfilt27_fb_sptr self, int which) -> float
        pc_output_buffers_full_var(vitfilt27_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(vitfilt27_fb_sptr self) -> float"""
        return _lilacsat_swig.vitfilt27_fb_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(vitfilt27_fb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.vitfilt27_fb_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(vitfilt27_fb_sptr self)"""
        return _lilacsat_swig.vitfilt27_fb_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(vitfilt27_fb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.vitfilt27_fb_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(vitfilt27_fb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(vitfilt27_fb_sptr self) -> int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(vitfilt27_fb_sptr self, int priority) -> int"""
        return _lilacsat_swig.vitfilt27_fb_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(vitfilt27_fb_sptr self) -> std::string"""
        return _lilacsat_swig.vitfilt27_fb_sptr_name(self)

    def symbol_name(self):
        """symbol_name(vitfilt27_fb_sptr self) -> std::string"""
        return _lilacsat_swig.vitfilt27_fb_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(vitfilt27_fb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.vitfilt27_fb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(vitfilt27_fb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.vitfilt27_fb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(vitfilt27_fb_sptr self) -> long"""
        return _lilacsat_swig.vitfilt27_fb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(vitfilt27_fb_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.vitfilt27_fb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(vitfilt27_fb_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.vitfilt27_fb_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(vitfilt27_fb_sptr self) -> std::string"""
        return _lilacsat_swig.vitfilt27_fb_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(vitfilt27_fb_sptr self, std::string name)"""
        return _lilacsat_swig.vitfilt27_fb_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(vitfilt27_fb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.vitfilt27_fb_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(vitfilt27_fb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.vitfilt27_fb_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(vitfilt27_fb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.vitfilt27_fb_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(vitfilt27_fb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.vitfilt27_fb_sptr_message_subscribers(self, *args, **kwargs)

vitfilt27_fb_sptr_swigregister = _lilacsat_swig.vitfilt27_fb_sptr_swigregister
vitfilt27_fb_sptr_swigregister(vitfilt27_fb_sptr)

vitfilt27_fb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
vitfilt27_fb = vitfilt27_fb.make;

class angle_cf(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> angle_cf_sptr

        Return a shared_ptr to a new instance of lilacsat::angle_cf.

        To avoid accidental use of raw pointers, lilacsat::angle_cf's constructor is in a private implementation class. lilacsat::angle_cf::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.angle_cf_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_angle_cf
    __del__ = lambda self : None;
angle_cf_swigregister = _lilacsat_swig.angle_cf_swigregister
angle_cf_swigregister(angle_cf)

def angle_cf_make():
  """
    angle_cf_make() -> angle_cf_sptr

    Return a shared_ptr to a new instance of lilacsat::angle_cf.

    To avoid accidental use of raw pointers, lilacsat::angle_cf's constructor is in a private implementation class. lilacsat::angle_cf::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.angle_cf_make()

class angle_cf_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::angle_cf)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::angle_cf)> self) -> angle_cf_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::angle_cf)> self, angle_cf p) -> angle_cf_sptr
        """
        this = _lilacsat_swig.new_angle_cf_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(angle_cf_sptr self) -> angle_cf"""
        return _lilacsat_swig.angle_cf_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_angle_cf_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(angle_cf_sptr self) -> angle_cf_sptr

        Return a shared_ptr to a new instance of lilacsat::angle_cf.

        To avoid accidental use of raw pointers, lilacsat::angle_cf's constructor is in a private implementation class. lilacsat::angle_cf::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.angle_cf_sptr_make(self)

    def history(self):
        """history(angle_cf_sptr self) -> unsigned int"""
        return _lilacsat_swig.angle_cf_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(angle_cf_sptr self, int which, int delay)
        declare_sample_delay(angle_cf_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.angle_cf_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(angle_cf_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.angle_cf_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(angle_cf_sptr self) -> int"""
        return _lilacsat_swig.angle_cf_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(angle_cf_sptr self) -> double"""
        return _lilacsat_swig.angle_cf_sptr_relative_rate(self)

    def start(self):
        """start(angle_cf_sptr self) -> bool"""
        return _lilacsat_swig.angle_cf_sptr_start(self)

    def stop(self):
        """stop(angle_cf_sptr self) -> bool"""
        return _lilacsat_swig.angle_cf_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(angle_cf_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.angle_cf_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(angle_cf_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.angle_cf_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(angle_cf_sptr self) -> int"""
        return _lilacsat_swig.angle_cf_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(angle_cf_sptr self, int m)"""
        return _lilacsat_swig.angle_cf_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(angle_cf_sptr self)"""
        return _lilacsat_swig.angle_cf_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(angle_cf_sptr self) -> bool"""
        return _lilacsat_swig.angle_cf_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(angle_cf_sptr self, int m)"""
        return _lilacsat_swig.angle_cf_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(angle_cf_sptr self) -> int"""
        return _lilacsat_swig.angle_cf_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(angle_cf_sptr self, int i) -> long"""
        return _lilacsat_swig.angle_cf_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(angle_cf_sptr self, long max_output_buffer)
        set_max_output_buffer(angle_cf_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.angle_cf_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(angle_cf_sptr self, int i) -> long"""
        return _lilacsat_swig.angle_cf_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(angle_cf_sptr self, long min_output_buffer)
        set_min_output_buffer(angle_cf_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.angle_cf_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(angle_cf_sptr self, int which) -> float
        pc_input_buffers_full(angle_cf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.angle_cf_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(angle_cf_sptr self, int which) -> float
        pc_input_buffers_full_avg(angle_cf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.angle_cf_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(angle_cf_sptr self, int which) -> float
        pc_input_buffers_full_var(angle_cf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.angle_cf_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(angle_cf_sptr self, int which) -> float
        pc_output_buffers_full(angle_cf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.angle_cf_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(angle_cf_sptr self, int which) -> float
        pc_output_buffers_full_avg(angle_cf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.angle_cf_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(angle_cf_sptr self, int which) -> float
        pc_output_buffers_full_var(angle_cf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.angle_cf_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(angle_cf_sptr self) -> float"""
        return _lilacsat_swig.angle_cf_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(angle_cf_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.angle_cf_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(angle_cf_sptr self)"""
        return _lilacsat_swig.angle_cf_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(angle_cf_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.angle_cf_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(angle_cf_sptr self) -> int"""
        return _lilacsat_swig.angle_cf_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(angle_cf_sptr self) -> int"""
        return _lilacsat_swig.angle_cf_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(angle_cf_sptr self, int priority) -> int"""
        return _lilacsat_swig.angle_cf_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(angle_cf_sptr self) -> std::string"""
        return _lilacsat_swig.angle_cf_sptr_name(self)

    def symbol_name(self):
        """symbol_name(angle_cf_sptr self) -> std::string"""
        return _lilacsat_swig.angle_cf_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(angle_cf_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.angle_cf_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(angle_cf_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.angle_cf_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(angle_cf_sptr self) -> long"""
        return _lilacsat_swig.angle_cf_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(angle_cf_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.angle_cf_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(angle_cf_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.angle_cf_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(angle_cf_sptr self) -> std::string"""
        return _lilacsat_swig.angle_cf_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(angle_cf_sptr self, std::string name)"""
        return _lilacsat_swig.angle_cf_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(angle_cf_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.angle_cf_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(angle_cf_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.angle_cf_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(angle_cf_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.angle_cf_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(angle_cf_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.angle_cf_sptr_message_subscribers(self, *args, **kwargs)

angle_cf_sptr_swigregister = _lilacsat_swig.angle_cf_sptr_swigregister
angle_cf_sptr_swigregister(angle_cf_sptr)

angle_cf_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
angle_cf = angle_cf.make;

class pipe_sink_pdu(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(std::string const & label, std::string const & path, uint16_t permission, bool debug) -> pipe_sink_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::pipe_sink_pdu.

        To avoid accidental use of raw pointers, lilacsat::pipe_sink_pdu's constructor is in a private implementation class. lilacsat::pipe_sink_pdu::make is the public interface for creating new instances.

        Params: (label, path, permission, debug)
        """
        return _lilacsat_swig.pipe_sink_pdu_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_pipe_sink_pdu
    __del__ = lambda self : None;
pipe_sink_pdu_swigregister = _lilacsat_swig.pipe_sink_pdu_swigregister
pipe_sink_pdu_swigregister(pipe_sink_pdu)

def pipe_sink_pdu_make(*args, **kwargs):
  """
    pipe_sink_pdu_make(std::string const & label, std::string const & path, uint16_t permission, bool debug) -> pipe_sink_pdu_sptr

    Return a shared_ptr to a new instance of lilacsat::pipe_sink_pdu.

    To avoid accidental use of raw pointers, lilacsat::pipe_sink_pdu's constructor is in a private implementation class. lilacsat::pipe_sink_pdu::make is the public interface for creating new instances.

    Params: (label, path, permission, debug)
    """
  return _lilacsat_swig.pipe_sink_pdu_make(*args, **kwargs)

class pipe_sink_pdu_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::pipe_sink_pdu)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::pipe_sink_pdu)> self) -> pipe_sink_pdu_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::pipe_sink_pdu)> self, pipe_sink_pdu p) -> pipe_sink_pdu_sptr
        """
        this = _lilacsat_swig.new_pipe_sink_pdu_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(pipe_sink_pdu_sptr self) -> pipe_sink_pdu"""
        return _lilacsat_swig.pipe_sink_pdu_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_pipe_sink_pdu_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(pipe_sink_pdu_sptr self, std::string const & label, std::string const & path, uint16_t permission, bool debug) -> pipe_sink_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::pipe_sink_pdu.

        To avoid accidental use of raw pointers, lilacsat::pipe_sink_pdu's constructor is in a private implementation class. lilacsat::pipe_sink_pdu::make is the public interface for creating new instances.

        Params: (label, path, permission, debug)
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(pipe_sink_pdu_sptr self) -> unsigned int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(pipe_sink_pdu_sptr self, int which, int delay)
        declare_sample_delay(pipe_sink_pdu_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(pipe_sink_pdu_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(pipe_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(pipe_sink_pdu_sptr self) -> double"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_relative_rate(self)

    def start(self):
        """start(pipe_sink_pdu_sptr self) -> bool"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_start(self)

    def stop(self):
        """stop(pipe_sink_pdu_sptr self) -> bool"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(pipe_sink_pdu_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(pipe_sink_pdu_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(pipe_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(pipe_sink_pdu_sptr self, int m)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(pipe_sink_pdu_sptr self)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(pipe_sink_pdu_sptr self) -> bool"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(pipe_sink_pdu_sptr self, int m)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(pipe_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(pipe_sink_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(pipe_sink_pdu_sptr self, long max_output_buffer)
        set_max_output_buffer(pipe_sink_pdu_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(pipe_sink_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(pipe_sink_pdu_sptr self, long min_output_buffer)
        set_min_output_buffer(pipe_sink_pdu_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(pipe_sink_pdu_sptr self, int which) -> float
        pc_input_buffers_full(pipe_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(pipe_sink_pdu_sptr self, int which) -> float
        pc_input_buffers_full_avg(pipe_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(pipe_sink_pdu_sptr self, int which) -> float
        pc_input_buffers_full_var(pipe_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(pipe_sink_pdu_sptr self, int which) -> float
        pc_output_buffers_full(pipe_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(pipe_sink_pdu_sptr self, int which) -> float
        pc_output_buffers_full_avg(pipe_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(pipe_sink_pdu_sptr self, int which) -> float
        pc_output_buffers_full_var(pipe_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(pipe_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(pipe_sink_pdu_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(pipe_sink_pdu_sptr self)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(pipe_sink_pdu_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(pipe_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(pipe_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(pipe_sink_pdu_sptr self, int priority) -> int"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(pipe_sink_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_name(self)

    def symbol_name(self):
        """symbol_name(pipe_sink_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(pipe_sink_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(pipe_sink_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(pipe_sink_pdu_sptr self) -> long"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(pipe_sink_pdu_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(pipe_sink_pdu_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(pipe_sink_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(pipe_sink_pdu_sptr self, std::string name)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(pipe_sink_pdu_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.pipe_sink_pdu_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(pipe_sink_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(pipe_sink_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(pipe_sink_pdu_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.pipe_sink_pdu_sptr_message_subscribers(self, *args, **kwargs)

pipe_sink_pdu_sptr_swigregister = _lilacsat_swig.pipe_sink_pdu_sptr_swigregister
pipe_sink_pdu_sptr_swigregister(pipe_sink_pdu_sptr)

pipe_sink_pdu_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
pipe_sink_pdu = pipe_sink_pdu.make;

class serial_sink_pdu(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(std::string const & path, unsigned int baudrate, bool debug) -> serial_sink_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::serial_sink_pdu.

        To avoid accidental use of raw pointers, lilacsat::serial_sink_pdu's constructor is in a private implementation class. lilacsat::serial_sink_pdu::make is the public interface for creating new instances.

        Params: (path, baudrate, debug)
        """
        return _lilacsat_swig.serial_sink_pdu_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_serial_sink_pdu
    __del__ = lambda self : None;
serial_sink_pdu_swigregister = _lilacsat_swig.serial_sink_pdu_swigregister
serial_sink_pdu_swigregister(serial_sink_pdu)

def serial_sink_pdu_make(*args, **kwargs):
  """
    serial_sink_pdu_make(std::string const & path, unsigned int baudrate, bool debug) -> serial_sink_pdu_sptr

    Return a shared_ptr to a new instance of lilacsat::serial_sink_pdu.

    To avoid accidental use of raw pointers, lilacsat::serial_sink_pdu's constructor is in a private implementation class. lilacsat::serial_sink_pdu::make is the public interface for creating new instances.

    Params: (path, baudrate, debug)
    """
  return _lilacsat_swig.serial_sink_pdu_make(*args, **kwargs)

class serial_sink_pdu_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::serial_sink_pdu)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::serial_sink_pdu)> self) -> serial_sink_pdu_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::serial_sink_pdu)> self, serial_sink_pdu p) -> serial_sink_pdu_sptr
        """
        this = _lilacsat_swig.new_serial_sink_pdu_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(serial_sink_pdu_sptr self) -> serial_sink_pdu"""
        return _lilacsat_swig.serial_sink_pdu_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_serial_sink_pdu_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(serial_sink_pdu_sptr self, std::string const & path, unsigned int baudrate, bool debug) -> serial_sink_pdu_sptr

        Return a shared_ptr to a new instance of lilacsat::serial_sink_pdu.

        To avoid accidental use of raw pointers, lilacsat::serial_sink_pdu's constructor is in a private implementation class. lilacsat::serial_sink_pdu::make is the public interface for creating new instances.

        Params: (path, baudrate, debug)
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(serial_sink_pdu_sptr self) -> unsigned int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(serial_sink_pdu_sptr self, int which, int delay)
        declare_sample_delay(serial_sink_pdu_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(serial_sink_pdu_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(serial_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(serial_sink_pdu_sptr self) -> double"""
        return _lilacsat_swig.serial_sink_pdu_sptr_relative_rate(self)

    def start(self):
        """start(serial_sink_pdu_sptr self) -> bool"""
        return _lilacsat_swig.serial_sink_pdu_sptr_start(self)

    def stop(self):
        """stop(serial_sink_pdu_sptr self) -> bool"""
        return _lilacsat_swig.serial_sink_pdu_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(serial_sink_pdu_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.serial_sink_pdu_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(serial_sink_pdu_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.serial_sink_pdu_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(serial_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(serial_sink_pdu_sptr self, int m)"""
        return _lilacsat_swig.serial_sink_pdu_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(serial_sink_pdu_sptr self)"""
        return _lilacsat_swig.serial_sink_pdu_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(serial_sink_pdu_sptr self) -> bool"""
        return _lilacsat_swig.serial_sink_pdu_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(serial_sink_pdu_sptr self, int m)"""
        return _lilacsat_swig.serial_sink_pdu_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(serial_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(serial_sink_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.serial_sink_pdu_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(serial_sink_pdu_sptr self, long max_output_buffer)
        set_max_output_buffer(serial_sink_pdu_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(serial_sink_pdu_sptr self, int i) -> long"""
        return _lilacsat_swig.serial_sink_pdu_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(serial_sink_pdu_sptr self, long min_output_buffer)
        set_min_output_buffer(serial_sink_pdu_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(serial_sink_pdu_sptr self, int which) -> float
        pc_input_buffers_full(serial_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(serial_sink_pdu_sptr self, int which) -> float
        pc_input_buffers_full_avg(serial_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(serial_sink_pdu_sptr self, int which) -> float
        pc_input_buffers_full_var(serial_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(serial_sink_pdu_sptr self, int which) -> float
        pc_output_buffers_full(serial_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(serial_sink_pdu_sptr self, int which) -> float
        pc_output_buffers_full_avg(serial_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(serial_sink_pdu_sptr self, int which) -> float
        pc_output_buffers_full_var(serial_sink_pdu_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(serial_sink_pdu_sptr self) -> float"""
        return _lilacsat_swig.serial_sink_pdu_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(serial_sink_pdu_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.serial_sink_pdu_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(serial_sink_pdu_sptr self)"""
        return _lilacsat_swig.serial_sink_pdu_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(serial_sink_pdu_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.serial_sink_pdu_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(serial_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(serial_sink_pdu_sptr self) -> int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(serial_sink_pdu_sptr self, int priority) -> int"""
        return _lilacsat_swig.serial_sink_pdu_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(serial_sink_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.serial_sink_pdu_sptr_name(self)

    def symbol_name(self):
        """symbol_name(serial_sink_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.serial_sink_pdu_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(serial_sink_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.serial_sink_pdu_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(serial_sink_pdu_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.serial_sink_pdu_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(serial_sink_pdu_sptr self) -> long"""
        return _lilacsat_swig.serial_sink_pdu_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(serial_sink_pdu_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.serial_sink_pdu_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(serial_sink_pdu_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.serial_sink_pdu_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(serial_sink_pdu_sptr self) -> std::string"""
        return _lilacsat_swig.serial_sink_pdu_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(serial_sink_pdu_sptr self, std::string name)"""
        return _lilacsat_swig.serial_sink_pdu_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(serial_sink_pdu_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.serial_sink_pdu_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(serial_sink_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.serial_sink_pdu_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(serial_sink_pdu_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.serial_sink_pdu_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(serial_sink_pdu_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.serial_sink_pdu_sptr_message_subscribers(self, *args, **kwargs)

serial_sink_pdu_sptr_swigregister = _lilacsat_swig.serial_sink_pdu_sptr_swigregister
serial_sink_pdu_sptr_swigregister(serial_sink_pdu_sptr)

serial_sink_pdu_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
serial_sink_pdu = serial_sink_pdu.make;

class plan13_cc(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(bool enable, std::string const & tle1, std::string const & tle2, float lon, float lat, 
            float height, float fc, float samp_rate, bool txrx, bool verbose) -> plan13_cc_sptr

        Return a shared_ptr to a new instance of lilacsat::plan13_cc.

        To avoid accidental use of raw pointers, lilacsat::plan13_cc's constructor is in a private implementation class. lilacsat::plan13_cc::make is the public interface for creating new instances.

        Params: (enable, tle1, tle2, lon, lat, height, fc, samp_rate, txrx, verbose)
        """
        return _lilacsat_swig.plan13_cc_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_plan13_cc
    __del__ = lambda self : None;
plan13_cc_swigregister = _lilacsat_swig.plan13_cc_swigregister
plan13_cc_swigregister(plan13_cc)

def plan13_cc_make(*args, **kwargs):
  """
    plan13_cc_make(bool enable, std::string const & tle1, std::string const & tle2, float lon, float lat, 
        float height, float fc, float samp_rate, bool txrx, bool verbose) -> plan13_cc_sptr

    Return a shared_ptr to a new instance of lilacsat::plan13_cc.

    To avoid accidental use of raw pointers, lilacsat::plan13_cc's constructor is in a private implementation class. lilacsat::plan13_cc::make is the public interface for creating new instances.

    Params: (enable, tle1, tle2, lon, lat, height, fc, samp_rate, txrx, verbose)
    """
  return _lilacsat_swig.plan13_cc_make(*args, **kwargs)

class plan13_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::plan13_cc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::plan13_cc)> self) -> plan13_cc_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::plan13_cc)> self, plan13_cc p) -> plan13_cc_sptr
        """
        this = _lilacsat_swig.new_plan13_cc_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(plan13_cc_sptr self) -> plan13_cc"""
        return _lilacsat_swig.plan13_cc_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_plan13_cc_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(plan13_cc_sptr self, bool enable, std::string const & tle1, std::string const & tle2, float lon, float lat, 
            float height, float fc, float samp_rate, bool txrx, bool verbose) -> plan13_cc_sptr

        Return a shared_ptr to a new instance of lilacsat::plan13_cc.

        To avoid accidental use of raw pointers, lilacsat::plan13_cc's constructor is in a private implementation class. lilacsat::plan13_cc::make is the public interface for creating new instances.

        Params: (enable, tle1, tle2, lon, lat, height, fc, samp_rate, txrx, verbose)
        """
        return _lilacsat_swig.plan13_cc_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(plan13_cc_sptr self) -> unsigned int"""
        return _lilacsat_swig.plan13_cc_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(plan13_cc_sptr self, int which, int delay)
        declare_sample_delay(plan13_cc_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.plan13_cc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(plan13_cc_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.plan13_cc_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(plan13_cc_sptr self) -> int"""
        return _lilacsat_swig.plan13_cc_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(plan13_cc_sptr self) -> double"""
        return _lilacsat_swig.plan13_cc_sptr_relative_rate(self)

    def start(self):
        """start(plan13_cc_sptr self) -> bool"""
        return _lilacsat_swig.plan13_cc_sptr_start(self)

    def stop(self):
        """stop(plan13_cc_sptr self) -> bool"""
        return _lilacsat_swig.plan13_cc_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(plan13_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.plan13_cc_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(plan13_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.plan13_cc_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(plan13_cc_sptr self) -> int"""
        return _lilacsat_swig.plan13_cc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(plan13_cc_sptr self, int m)"""
        return _lilacsat_swig.plan13_cc_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(plan13_cc_sptr self)"""
        return _lilacsat_swig.plan13_cc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(plan13_cc_sptr self) -> bool"""
        return _lilacsat_swig.plan13_cc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(plan13_cc_sptr self, int m)"""
        return _lilacsat_swig.plan13_cc_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(plan13_cc_sptr self) -> int"""
        return _lilacsat_swig.plan13_cc_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(plan13_cc_sptr self, int i) -> long"""
        return _lilacsat_swig.plan13_cc_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(plan13_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(plan13_cc_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.plan13_cc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(plan13_cc_sptr self, int i) -> long"""
        return _lilacsat_swig.plan13_cc_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(plan13_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(plan13_cc_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.plan13_cc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(plan13_cc_sptr self, int which) -> float
        pc_input_buffers_full(plan13_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.plan13_cc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(plan13_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(plan13_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.plan13_cc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(plan13_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(plan13_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.plan13_cc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(plan13_cc_sptr self, int which) -> float
        pc_output_buffers_full(plan13_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.plan13_cc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(plan13_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(plan13_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.plan13_cc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(plan13_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(plan13_cc_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.plan13_cc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(plan13_cc_sptr self) -> float"""
        return _lilacsat_swig.plan13_cc_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(plan13_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.plan13_cc_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(plan13_cc_sptr self)"""
        return _lilacsat_swig.plan13_cc_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(plan13_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.plan13_cc_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(plan13_cc_sptr self) -> int"""
        return _lilacsat_swig.plan13_cc_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(plan13_cc_sptr self) -> int"""
        return _lilacsat_swig.plan13_cc_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(plan13_cc_sptr self, int priority) -> int"""
        return _lilacsat_swig.plan13_cc_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(plan13_cc_sptr self) -> std::string"""
        return _lilacsat_swig.plan13_cc_sptr_name(self)

    def symbol_name(self):
        """symbol_name(plan13_cc_sptr self) -> std::string"""
        return _lilacsat_swig.plan13_cc_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(plan13_cc_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.plan13_cc_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(plan13_cc_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.plan13_cc_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(plan13_cc_sptr self) -> long"""
        return _lilacsat_swig.plan13_cc_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(plan13_cc_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.plan13_cc_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(plan13_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.plan13_cc_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(plan13_cc_sptr self) -> std::string"""
        return _lilacsat_swig.plan13_cc_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(plan13_cc_sptr self, std::string name)"""
        return _lilacsat_swig.plan13_cc_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(plan13_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.plan13_cc_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(plan13_cc_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.plan13_cc_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(plan13_cc_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.plan13_cc_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(plan13_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.plan13_cc_sptr_message_subscribers(self, *args, **kwargs)

plan13_cc_sptr_swigregister = _lilacsat_swig.plan13_cc_sptr_swigregister
plan13_cc_sptr_swigregister(plan13_cc_sptr)

plan13_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
plan13_cc = plan13_cc.make;

class print_to_file_b(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(std::string const & path, int16_t format) -> print_to_file_b_sptr

        Return a shared_ptr to a new instance of lilacsat::print_to_file_b.

        To avoid accidental use of raw pointers, lilacsat::print_to_file_b's constructor is in a private implementation class. lilacsat::print_to_file_b::make is the public interface for creating new instances.

        Params: (path, format)
        """
        return _lilacsat_swig.print_to_file_b_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_print_to_file_b
    __del__ = lambda self : None;
print_to_file_b_swigregister = _lilacsat_swig.print_to_file_b_swigregister
print_to_file_b_swigregister(print_to_file_b)

def print_to_file_b_make(*args, **kwargs):
  """
    print_to_file_b_make(std::string const & path, int16_t format) -> print_to_file_b_sptr

    Return a shared_ptr to a new instance of lilacsat::print_to_file_b.

    To avoid accidental use of raw pointers, lilacsat::print_to_file_b's constructor is in a private implementation class. lilacsat::print_to_file_b::make is the public interface for creating new instances.

    Params: (path, format)
    """
  return _lilacsat_swig.print_to_file_b_make(*args, **kwargs)

class print_to_file_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::print_to_file_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::print_to_file_b)> self) -> print_to_file_b_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::print_to_file_b)> self, print_to_file_b p) -> print_to_file_b_sptr
        """
        this = _lilacsat_swig.new_print_to_file_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(print_to_file_b_sptr self) -> print_to_file_b"""
        return _lilacsat_swig.print_to_file_b_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_print_to_file_b_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(print_to_file_b_sptr self, std::string const & path, int16_t format) -> print_to_file_b_sptr

        Return a shared_ptr to a new instance of lilacsat::print_to_file_b.

        To avoid accidental use of raw pointers, lilacsat::print_to_file_b's constructor is in a private implementation class. lilacsat::print_to_file_b::make is the public interface for creating new instances.

        Params: (path, format)
        """
        return _lilacsat_swig.print_to_file_b_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(print_to_file_b_sptr self) -> unsigned int"""
        return _lilacsat_swig.print_to_file_b_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(print_to_file_b_sptr self, int which, int delay)
        declare_sample_delay(print_to_file_b_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.print_to_file_b_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(print_to_file_b_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.print_to_file_b_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(print_to_file_b_sptr self) -> int"""
        return _lilacsat_swig.print_to_file_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(print_to_file_b_sptr self) -> double"""
        return _lilacsat_swig.print_to_file_b_sptr_relative_rate(self)

    def start(self):
        """start(print_to_file_b_sptr self) -> bool"""
        return _lilacsat_swig.print_to_file_b_sptr_start(self)

    def stop(self):
        """stop(print_to_file_b_sptr self) -> bool"""
        return _lilacsat_swig.print_to_file_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(print_to_file_b_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.print_to_file_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(print_to_file_b_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.print_to_file_b_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(print_to_file_b_sptr self) -> int"""
        return _lilacsat_swig.print_to_file_b_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(print_to_file_b_sptr self, int m)"""
        return _lilacsat_swig.print_to_file_b_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(print_to_file_b_sptr self)"""
        return _lilacsat_swig.print_to_file_b_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(print_to_file_b_sptr self) -> bool"""
        return _lilacsat_swig.print_to_file_b_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(print_to_file_b_sptr self, int m)"""
        return _lilacsat_swig.print_to_file_b_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(print_to_file_b_sptr self) -> int"""
        return _lilacsat_swig.print_to_file_b_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(print_to_file_b_sptr self, int i) -> long"""
        return _lilacsat_swig.print_to_file_b_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(print_to_file_b_sptr self, long max_output_buffer)
        set_max_output_buffer(print_to_file_b_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.print_to_file_b_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(print_to_file_b_sptr self, int i) -> long"""
        return _lilacsat_swig.print_to_file_b_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(print_to_file_b_sptr self, long min_output_buffer)
        set_min_output_buffer(print_to_file_b_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.print_to_file_b_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(print_to_file_b_sptr self, int which) -> float
        pc_input_buffers_full(print_to_file_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.print_to_file_b_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(print_to_file_b_sptr self, int which) -> float
        pc_input_buffers_full_avg(print_to_file_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.print_to_file_b_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(print_to_file_b_sptr self, int which) -> float
        pc_input_buffers_full_var(print_to_file_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.print_to_file_b_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(print_to_file_b_sptr self, int which) -> float
        pc_output_buffers_full(print_to_file_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.print_to_file_b_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(print_to_file_b_sptr self, int which) -> float
        pc_output_buffers_full_avg(print_to_file_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.print_to_file_b_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(print_to_file_b_sptr self, int which) -> float
        pc_output_buffers_full_var(print_to_file_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.print_to_file_b_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(print_to_file_b_sptr self) -> float"""
        return _lilacsat_swig.print_to_file_b_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(print_to_file_b_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.print_to_file_b_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(print_to_file_b_sptr self)"""
        return _lilacsat_swig.print_to_file_b_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(print_to_file_b_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.print_to_file_b_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(print_to_file_b_sptr self) -> int"""
        return _lilacsat_swig.print_to_file_b_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(print_to_file_b_sptr self) -> int"""
        return _lilacsat_swig.print_to_file_b_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(print_to_file_b_sptr self, int priority) -> int"""
        return _lilacsat_swig.print_to_file_b_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(print_to_file_b_sptr self) -> std::string"""
        return _lilacsat_swig.print_to_file_b_sptr_name(self)

    def symbol_name(self):
        """symbol_name(print_to_file_b_sptr self) -> std::string"""
        return _lilacsat_swig.print_to_file_b_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(print_to_file_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.print_to_file_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(print_to_file_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.print_to_file_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(print_to_file_b_sptr self) -> long"""
        return _lilacsat_swig.print_to_file_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(print_to_file_b_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.print_to_file_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(print_to_file_b_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.print_to_file_b_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(print_to_file_b_sptr self) -> std::string"""
        return _lilacsat_swig.print_to_file_b_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(print_to_file_b_sptr self, std::string name)"""
        return _lilacsat_swig.print_to_file_b_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(print_to_file_b_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.print_to_file_b_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(print_to_file_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.print_to_file_b_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(print_to_file_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.print_to_file_b_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(print_to_file_b_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.print_to_file_b_sptr_message_subscribers(self, *args, **kwargs)

print_to_file_b_sptr_swigregister = _lilacsat_swig.print_to_file_b_sptr_swigregister
print_to_file_b_sptr_swigregister(print_to_file_b_sptr)

print_to_file_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
print_to_file_b = print_to_file_b.make;

class codec2_decode_bf(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int mode) -> codec2_decode_bf_sptr

        Return a shared_ptr to a new instance of lilacsat::codec2_decode_bf.

        To avoid accidental use of raw pointers, lilacsat::codec2_decode_bf's constructor is in a private implementation class. lilacsat::codec2_decode_bf::make is the public interface for creating new instances.

        Params: (mode)
        """
        return _lilacsat_swig.codec2_decode_bf_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_codec2_decode_bf
    __del__ = lambda self : None;
codec2_decode_bf_swigregister = _lilacsat_swig.codec2_decode_bf_swigregister
codec2_decode_bf_swigregister(codec2_decode_bf)

def codec2_decode_bf_make(*args, **kwargs):
  """
    codec2_decode_bf_make(int mode) -> codec2_decode_bf_sptr

    Return a shared_ptr to a new instance of lilacsat::codec2_decode_bf.

    To avoid accidental use of raw pointers, lilacsat::codec2_decode_bf's constructor is in a private implementation class. lilacsat::codec2_decode_bf::make is the public interface for creating new instances.

    Params: (mode)
    """
  return _lilacsat_swig.codec2_decode_bf_make(*args, **kwargs)

class codec2_decode_bf_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::codec2_decode_bf)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::codec2_decode_bf)> self) -> codec2_decode_bf_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::codec2_decode_bf)> self, codec2_decode_bf p) -> codec2_decode_bf_sptr
        """
        this = _lilacsat_swig.new_codec2_decode_bf_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(codec2_decode_bf_sptr self) -> codec2_decode_bf"""
        return _lilacsat_swig.codec2_decode_bf_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_codec2_decode_bf_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(codec2_decode_bf_sptr self, int mode) -> codec2_decode_bf_sptr

        Return a shared_ptr to a new instance of lilacsat::codec2_decode_bf.

        To avoid accidental use of raw pointers, lilacsat::codec2_decode_bf's constructor is in a private implementation class. lilacsat::codec2_decode_bf::make is the public interface for creating new instances.

        Params: (mode)
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(codec2_decode_bf_sptr self) -> unsigned int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(codec2_decode_bf_sptr self, int which, int delay)
        declare_sample_delay(codec2_decode_bf_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(codec2_decode_bf_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(codec2_decode_bf_sptr self) -> int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(codec2_decode_bf_sptr self) -> double"""
        return _lilacsat_swig.codec2_decode_bf_sptr_relative_rate(self)

    def start(self):
        """start(codec2_decode_bf_sptr self) -> bool"""
        return _lilacsat_swig.codec2_decode_bf_sptr_start(self)

    def stop(self):
        """stop(codec2_decode_bf_sptr self) -> bool"""
        return _lilacsat_swig.codec2_decode_bf_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(codec2_decode_bf_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.codec2_decode_bf_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(codec2_decode_bf_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.codec2_decode_bf_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(codec2_decode_bf_sptr self) -> int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(codec2_decode_bf_sptr self, int m)"""
        return _lilacsat_swig.codec2_decode_bf_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(codec2_decode_bf_sptr self)"""
        return _lilacsat_swig.codec2_decode_bf_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(codec2_decode_bf_sptr self) -> bool"""
        return _lilacsat_swig.codec2_decode_bf_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(codec2_decode_bf_sptr self, int m)"""
        return _lilacsat_swig.codec2_decode_bf_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(codec2_decode_bf_sptr self) -> int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(codec2_decode_bf_sptr self, int i) -> long"""
        return _lilacsat_swig.codec2_decode_bf_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(codec2_decode_bf_sptr self, long max_output_buffer)
        set_max_output_buffer(codec2_decode_bf_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(codec2_decode_bf_sptr self, int i) -> long"""
        return _lilacsat_swig.codec2_decode_bf_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(codec2_decode_bf_sptr self, long min_output_buffer)
        set_min_output_buffer(codec2_decode_bf_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(codec2_decode_bf_sptr self, int which) -> float
        pc_input_buffers_full(codec2_decode_bf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(codec2_decode_bf_sptr self, int which) -> float
        pc_input_buffers_full_avg(codec2_decode_bf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(codec2_decode_bf_sptr self, int which) -> float
        pc_input_buffers_full_var(codec2_decode_bf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(codec2_decode_bf_sptr self, int which) -> float
        pc_output_buffers_full(codec2_decode_bf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(codec2_decode_bf_sptr self, int which) -> float
        pc_output_buffers_full_avg(codec2_decode_bf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(codec2_decode_bf_sptr self, int which) -> float
        pc_output_buffers_full_var(codec2_decode_bf_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(codec2_decode_bf_sptr self) -> float"""
        return _lilacsat_swig.codec2_decode_bf_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(codec2_decode_bf_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.codec2_decode_bf_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(codec2_decode_bf_sptr self)"""
        return _lilacsat_swig.codec2_decode_bf_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(codec2_decode_bf_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.codec2_decode_bf_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(codec2_decode_bf_sptr self) -> int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(codec2_decode_bf_sptr self) -> int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(codec2_decode_bf_sptr self, int priority) -> int"""
        return _lilacsat_swig.codec2_decode_bf_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(codec2_decode_bf_sptr self) -> std::string"""
        return _lilacsat_swig.codec2_decode_bf_sptr_name(self)

    def symbol_name(self):
        """symbol_name(codec2_decode_bf_sptr self) -> std::string"""
        return _lilacsat_swig.codec2_decode_bf_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(codec2_decode_bf_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.codec2_decode_bf_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(codec2_decode_bf_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.codec2_decode_bf_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(codec2_decode_bf_sptr self) -> long"""
        return _lilacsat_swig.codec2_decode_bf_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(codec2_decode_bf_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.codec2_decode_bf_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(codec2_decode_bf_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.codec2_decode_bf_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(codec2_decode_bf_sptr self) -> std::string"""
        return _lilacsat_swig.codec2_decode_bf_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(codec2_decode_bf_sptr self, std::string name)"""
        return _lilacsat_swig.codec2_decode_bf_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(codec2_decode_bf_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.codec2_decode_bf_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(codec2_decode_bf_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.codec2_decode_bf_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(codec2_decode_bf_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.codec2_decode_bf_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(codec2_decode_bf_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.codec2_decode_bf_sptr_message_subscribers(self, *args, **kwargs)

codec2_decode_bf_sptr_swigregister = _lilacsat_swig.codec2_decode_bf_sptr_swigregister
codec2_decode_bf_sptr_swigregister(codec2_decode_bf_sptr)

codec2_decode_bf_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
codec2_decode_bf = codec2_decode_bf.make;

class codec2_encode_fb(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int mode) -> codec2_encode_fb_sptr

        Return a shared_ptr to a new instance of lilacsat::codec2_encode_fb.

        To avoid accidental use of raw pointers, lilacsat::codec2_encode_fb's constructor is in a private implementation class. lilacsat::codec2_encode_fb::make is the public interface for creating new instances.

        Params: (mode)
        """
        return _lilacsat_swig.codec2_encode_fb_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_codec2_encode_fb
    __del__ = lambda self : None;
codec2_encode_fb_swigregister = _lilacsat_swig.codec2_encode_fb_swigregister
codec2_encode_fb_swigregister(codec2_encode_fb)

def codec2_encode_fb_make(*args, **kwargs):
  """
    codec2_encode_fb_make(int mode) -> codec2_encode_fb_sptr

    Return a shared_ptr to a new instance of lilacsat::codec2_encode_fb.

    To avoid accidental use of raw pointers, lilacsat::codec2_encode_fb's constructor is in a private implementation class. lilacsat::codec2_encode_fb::make is the public interface for creating new instances.

    Params: (mode)
    """
  return _lilacsat_swig.codec2_encode_fb_make(*args, **kwargs)

class codec2_encode_fb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::codec2_encode_fb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::codec2_encode_fb)> self) -> codec2_encode_fb_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::codec2_encode_fb)> self, codec2_encode_fb p) -> codec2_encode_fb_sptr
        """
        this = _lilacsat_swig.new_codec2_encode_fb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(codec2_encode_fb_sptr self) -> codec2_encode_fb"""
        return _lilacsat_swig.codec2_encode_fb_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_codec2_encode_fb_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(codec2_encode_fb_sptr self, int mode) -> codec2_encode_fb_sptr

        Return a shared_ptr to a new instance of lilacsat::codec2_encode_fb.

        To avoid accidental use of raw pointers, lilacsat::codec2_encode_fb's constructor is in a private implementation class. lilacsat::codec2_encode_fb::make is the public interface for creating new instances.

        Params: (mode)
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(codec2_encode_fb_sptr self) -> unsigned int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(codec2_encode_fb_sptr self, int which, int delay)
        declare_sample_delay(codec2_encode_fb_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(codec2_encode_fb_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(codec2_encode_fb_sptr self) -> int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(codec2_encode_fb_sptr self) -> double"""
        return _lilacsat_swig.codec2_encode_fb_sptr_relative_rate(self)

    def start(self):
        """start(codec2_encode_fb_sptr self) -> bool"""
        return _lilacsat_swig.codec2_encode_fb_sptr_start(self)

    def stop(self):
        """stop(codec2_encode_fb_sptr self) -> bool"""
        return _lilacsat_swig.codec2_encode_fb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(codec2_encode_fb_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.codec2_encode_fb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(codec2_encode_fb_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.codec2_encode_fb_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(codec2_encode_fb_sptr self) -> int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(codec2_encode_fb_sptr self, int m)"""
        return _lilacsat_swig.codec2_encode_fb_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(codec2_encode_fb_sptr self)"""
        return _lilacsat_swig.codec2_encode_fb_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(codec2_encode_fb_sptr self) -> bool"""
        return _lilacsat_swig.codec2_encode_fb_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(codec2_encode_fb_sptr self, int m)"""
        return _lilacsat_swig.codec2_encode_fb_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(codec2_encode_fb_sptr self) -> int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(codec2_encode_fb_sptr self, int i) -> long"""
        return _lilacsat_swig.codec2_encode_fb_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(codec2_encode_fb_sptr self, long max_output_buffer)
        set_max_output_buffer(codec2_encode_fb_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(codec2_encode_fb_sptr self, int i) -> long"""
        return _lilacsat_swig.codec2_encode_fb_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(codec2_encode_fb_sptr self, long min_output_buffer)
        set_min_output_buffer(codec2_encode_fb_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(codec2_encode_fb_sptr self, int which) -> float
        pc_input_buffers_full(codec2_encode_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(codec2_encode_fb_sptr self, int which) -> float
        pc_input_buffers_full_avg(codec2_encode_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(codec2_encode_fb_sptr self, int which) -> float
        pc_input_buffers_full_var(codec2_encode_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(codec2_encode_fb_sptr self, int which) -> float
        pc_output_buffers_full(codec2_encode_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(codec2_encode_fb_sptr self, int which) -> float
        pc_output_buffers_full_avg(codec2_encode_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(codec2_encode_fb_sptr self, int which) -> float
        pc_output_buffers_full_var(codec2_encode_fb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(codec2_encode_fb_sptr self) -> float"""
        return _lilacsat_swig.codec2_encode_fb_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(codec2_encode_fb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.codec2_encode_fb_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(codec2_encode_fb_sptr self)"""
        return _lilacsat_swig.codec2_encode_fb_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(codec2_encode_fb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.codec2_encode_fb_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(codec2_encode_fb_sptr self) -> int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(codec2_encode_fb_sptr self) -> int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(codec2_encode_fb_sptr self, int priority) -> int"""
        return _lilacsat_swig.codec2_encode_fb_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(codec2_encode_fb_sptr self) -> std::string"""
        return _lilacsat_swig.codec2_encode_fb_sptr_name(self)

    def symbol_name(self):
        """symbol_name(codec2_encode_fb_sptr self) -> std::string"""
        return _lilacsat_swig.codec2_encode_fb_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(codec2_encode_fb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.codec2_encode_fb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(codec2_encode_fb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.codec2_encode_fb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(codec2_encode_fb_sptr self) -> long"""
        return _lilacsat_swig.codec2_encode_fb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(codec2_encode_fb_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.codec2_encode_fb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(codec2_encode_fb_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.codec2_encode_fb_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(codec2_encode_fb_sptr self) -> std::string"""
        return _lilacsat_swig.codec2_encode_fb_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(codec2_encode_fb_sptr self, std::string name)"""
        return _lilacsat_swig.codec2_encode_fb_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(codec2_encode_fb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.codec2_encode_fb_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(codec2_encode_fb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.codec2_encode_fb_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(codec2_encode_fb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.codec2_encode_fb_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(codec2_encode_fb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.codec2_encode_fb_sptr_message_subscribers(self, *args, **kwargs)

codec2_encode_fb_sptr_swigregister = _lilacsat_swig.codec2_encode_fb_sptr_swigregister
codec2_encode_fb_sptr_swigregister(codec2_encode_fb_sptr)

codec2_encode_fb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
codec2_encode_fb = codec2_encode_fb.make;

class cc_decode_bb(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> cc_decode_bb_sptr

        Return a shared_ptr to a new instance of lilacsat::cc_decode_bb.

        To avoid accidental use of raw pointers, lilacsat::cc_decode_bb's constructor is in a private implementation class. lilacsat::cc_decode_bb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.cc_decode_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_cc_decode_bb
    __del__ = lambda self : None;
cc_decode_bb_swigregister = _lilacsat_swig.cc_decode_bb_swigregister
cc_decode_bb_swigregister(cc_decode_bb)

def cc_decode_bb_make():
  """
    cc_decode_bb_make() -> cc_decode_bb_sptr

    Return a shared_ptr to a new instance of lilacsat::cc_decode_bb.

    To avoid accidental use of raw pointers, lilacsat::cc_decode_bb's constructor is in a private implementation class. lilacsat::cc_decode_bb::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.cc_decode_bb_make()

class cc_decode_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::cc_decode_bb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::cc_decode_bb)> self) -> cc_decode_bb_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::cc_decode_bb)> self, cc_decode_bb p) -> cc_decode_bb_sptr
        """
        this = _lilacsat_swig.new_cc_decode_bb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(cc_decode_bb_sptr self) -> cc_decode_bb"""
        return _lilacsat_swig.cc_decode_bb_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_cc_decode_bb_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(cc_decode_bb_sptr self) -> cc_decode_bb_sptr

        Return a shared_ptr to a new instance of lilacsat::cc_decode_bb.

        To avoid accidental use of raw pointers, lilacsat::cc_decode_bb's constructor is in a private implementation class. lilacsat::cc_decode_bb::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.cc_decode_bb_sptr_make(self)

    def history(self):
        """history(cc_decode_bb_sptr self) -> unsigned int"""
        return _lilacsat_swig.cc_decode_bb_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(cc_decode_bb_sptr self, int which, int delay)
        declare_sample_delay(cc_decode_bb_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.cc_decode_bb_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(cc_decode_bb_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.cc_decode_bb_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(cc_decode_bb_sptr self) -> int"""
        return _lilacsat_swig.cc_decode_bb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(cc_decode_bb_sptr self) -> double"""
        return _lilacsat_swig.cc_decode_bb_sptr_relative_rate(self)

    def start(self):
        """start(cc_decode_bb_sptr self) -> bool"""
        return _lilacsat_swig.cc_decode_bb_sptr_start(self)

    def stop(self):
        """stop(cc_decode_bb_sptr self) -> bool"""
        return _lilacsat_swig.cc_decode_bb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(cc_decode_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.cc_decode_bb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(cc_decode_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.cc_decode_bb_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(cc_decode_bb_sptr self) -> int"""
        return _lilacsat_swig.cc_decode_bb_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(cc_decode_bb_sptr self, int m)"""
        return _lilacsat_swig.cc_decode_bb_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(cc_decode_bb_sptr self)"""
        return _lilacsat_swig.cc_decode_bb_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(cc_decode_bb_sptr self) -> bool"""
        return _lilacsat_swig.cc_decode_bb_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(cc_decode_bb_sptr self, int m)"""
        return _lilacsat_swig.cc_decode_bb_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(cc_decode_bb_sptr self) -> int"""
        return _lilacsat_swig.cc_decode_bb_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(cc_decode_bb_sptr self, int i) -> long"""
        return _lilacsat_swig.cc_decode_bb_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(cc_decode_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(cc_decode_bb_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.cc_decode_bb_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(cc_decode_bb_sptr self, int i) -> long"""
        return _lilacsat_swig.cc_decode_bb_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(cc_decode_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(cc_decode_bb_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.cc_decode_bb_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(cc_decode_bb_sptr self, int which) -> float
        pc_input_buffers_full(cc_decode_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.cc_decode_bb_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(cc_decode_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(cc_decode_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.cc_decode_bb_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(cc_decode_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(cc_decode_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.cc_decode_bb_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(cc_decode_bb_sptr self, int which) -> float
        pc_output_buffers_full(cc_decode_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.cc_decode_bb_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(cc_decode_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(cc_decode_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.cc_decode_bb_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(cc_decode_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(cc_decode_bb_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.cc_decode_bb_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(cc_decode_bb_sptr self) -> float"""
        return _lilacsat_swig.cc_decode_bb_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(cc_decode_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.cc_decode_bb_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(cc_decode_bb_sptr self)"""
        return _lilacsat_swig.cc_decode_bb_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(cc_decode_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.cc_decode_bb_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(cc_decode_bb_sptr self) -> int"""
        return _lilacsat_swig.cc_decode_bb_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(cc_decode_bb_sptr self) -> int"""
        return _lilacsat_swig.cc_decode_bb_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(cc_decode_bb_sptr self, int priority) -> int"""
        return _lilacsat_swig.cc_decode_bb_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(cc_decode_bb_sptr self) -> std::string"""
        return _lilacsat_swig.cc_decode_bb_sptr_name(self)

    def symbol_name(self):
        """symbol_name(cc_decode_bb_sptr self) -> std::string"""
        return _lilacsat_swig.cc_decode_bb_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(cc_decode_bb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.cc_decode_bb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(cc_decode_bb_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.cc_decode_bb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(cc_decode_bb_sptr self) -> long"""
        return _lilacsat_swig.cc_decode_bb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(cc_decode_bb_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.cc_decode_bb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(cc_decode_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.cc_decode_bb_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(cc_decode_bb_sptr self) -> std::string"""
        return _lilacsat_swig.cc_decode_bb_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(cc_decode_bb_sptr self, std::string name)"""
        return _lilacsat_swig.cc_decode_bb_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(cc_decode_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.cc_decode_bb_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(cc_decode_bb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.cc_decode_bb_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(cc_decode_bb_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.cc_decode_bb_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(cc_decode_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.cc_decode_bb_sptr_message_subscribers(self, *args, **kwargs)

cc_decode_bb_sptr_swigregister = _lilacsat_swig.cc_decode_bb_sptr_swigregister
cc_decode_bb_sptr_swigregister(cc_decode_bb_sptr)

cc_decode_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
cc_decode_bb = cc_decode_bb.make;

class sync_det_b(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(uint32_t sync_word, uint8_t len, uint8_t nrz, uint8_t descrambling) -> sync_det_b_sptr

        Return a shared_ptr to a new instance of lilacsat::sync_det_b.

        To avoid accidental use of raw pointers, lilacsat::sync_det_b's constructor is in a private implementation class. lilacsat::sync_det_b::make is the public interface for creating new instances.

        Params: (sync_word, len, nrz, descrambling)
        """
        return _lilacsat_swig.sync_det_b_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_sync_det_b
    __del__ = lambda self : None;
sync_det_b_swigregister = _lilacsat_swig.sync_det_b_swigregister
sync_det_b_swigregister(sync_det_b)

def sync_det_b_make(*args, **kwargs):
  """
    sync_det_b_make(uint32_t sync_word, uint8_t len, uint8_t nrz, uint8_t descrambling) -> sync_det_b_sptr

    Return a shared_ptr to a new instance of lilacsat::sync_det_b.

    To avoid accidental use of raw pointers, lilacsat::sync_det_b's constructor is in a private implementation class. lilacsat::sync_det_b::make is the public interface for creating new instances.

    Params: (sync_word, len, nrz, descrambling)
    """
  return _lilacsat_swig.sync_det_b_make(*args, **kwargs)

class sync_det_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::sync_det_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::sync_det_b)> self) -> sync_det_b_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::sync_det_b)> self, sync_det_b p) -> sync_det_b_sptr
        """
        this = _lilacsat_swig.new_sync_det_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(sync_det_b_sptr self) -> sync_det_b"""
        return _lilacsat_swig.sync_det_b_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_sync_det_b_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(sync_det_b_sptr self, uint32_t sync_word, uint8_t len, uint8_t nrz, uint8_t descrambling) -> sync_det_b_sptr

        Return a shared_ptr to a new instance of lilacsat::sync_det_b.

        To avoid accidental use of raw pointers, lilacsat::sync_det_b's constructor is in a private implementation class. lilacsat::sync_det_b::make is the public interface for creating new instances.

        Params: (sync_word, len, nrz, descrambling)
        """
        return _lilacsat_swig.sync_det_b_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(sync_det_b_sptr self) -> unsigned int"""
        return _lilacsat_swig.sync_det_b_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(sync_det_b_sptr self, int which, int delay)
        declare_sample_delay(sync_det_b_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.sync_det_b_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(sync_det_b_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.sync_det_b_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(sync_det_b_sptr self) -> int"""
        return _lilacsat_swig.sync_det_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(sync_det_b_sptr self) -> double"""
        return _lilacsat_swig.sync_det_b_sptr_relative_rate(self)

    def start(self):
        """start(sync_det_b_sptr self) -> bool"""
        return _lilacsat_swig.sync_det_b_sptr_start(self)

    def stop(self):
        """stop(sync_det_b_sptr self) -> bool"""
        return _lilacsat_swig.sync_det_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(sync_det_b_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.sync_det_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(sync_det_b_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.sync_det_b_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(sync_det_b_sptr self) -> int"""
        return _lilacsat_swig.sync_det_b_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(sync_det_b_sptr self, int m)"""
        return _lilacsat_swig.sync_det_b_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(sync_det_b_sptr self)"""
        return _lilacsat_swig.sync_det_b_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(sync_det_b_sptr self) -> bool"""
        return _lilacsat_swig.sync_det_b_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(sync_det_b_sptr self, int m)"""
        return _lilacsat_swig.sync_det_b_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(sync_det_b_sptr self) -> int"""
        return _lilacsat_swig.sync_det_b_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(sync_det_b_sptr self, int i) -> long"""
        return _lilacsat_swig.sync_det_b_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(sync_det_b_sptr self, long max_output_buffer)
        set_max_output_buffer(sync_det_b_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.sync_det_b_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(sync_det_b_sptr self, int i) -> long"""
        return _lilacsat_swig.sync_det_b_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(sync_det_b_sptr self, long min_output_buffer)
        set_min_output_buffer(sync_det_b_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.sync_det_b_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(sync_det_b_sptr self, int which) -> float
        pc_input_buffers_full(sync_det_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.sync_det_b_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(sync_det_b_sptr self, int which) -> float
        pc_input_buffers_full_avg(sync_det_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.sync_det_b_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(sync_det_b_sptr self, int which) -> float
        pc_input_buffers_full_var(sync_det_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.sync_det_b_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(sync_det_b_sptr self, int which) -> float
        pc_output_buffers_full(sync_det_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.sync_det_b_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(sync_det_b_sptr self, int which) -> float
        pc_output_buffers_full_avg(sync_det_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.sync_det_b_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(sync_det_b_sptr self, int which) -> float
        pc_output_buffers_full_var(sync_det_b_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.sync_det_b_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(sync_det_b_sptr self) -> float"""
        return _lilacsat_swig.sync_det_b_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(sync_det_b_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.sync_det_b_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(sync_det_b_sptr self)"""
        return _lilacsat_swig.sync_det_b_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(sync_det_b_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.sync_det_b_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(sync_det_b_sptr self) -> int"""
        return _lilacsat_swig.sync_det_b_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(sync_det_b_sptr self) -> int"""
        return _lilacsat_swig.sync_det_b_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(sync_det_b_sptr self, int priority) -> int"""
        return _lilacsat_swig.sync_det_b_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(sync_det_b_sptr self) -> std::string"""
        return _lilacsat_swig.sync_det_b_sptr_name(self)

    def symbol_name(self):
        """symbol_name(sync_det_b_sptr self) -> std::string"""
        return _lilacsat_swig.sync_det_b_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(sync_det_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.sync_det_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(sync_det_b_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.sync_det_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(sync_det_b_sptr self) -> long"""
        return _lilacsat_swig.sync_det_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(sync_det_b_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.sync_det_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(sync_det_b_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.sync_det_b_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(sync_det_b_sptr self) -> std::string"""
        return _lilacsat_swig.sync_det_b_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(sync_det_b_sptr self, std::string name)"""
        return _lilacsat_swig.sync_det_b_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(sync_det_b_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.sync_det_b_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(sync_det_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.sync_det_b_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(sync_det_b_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.sync_det_b_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(sync_det_b_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.sync_det_b_sptr_message_subscribers(self, *args, **kwargs)

sync_det_b_sptr_swigregister = _lilacsat_swig.sync_det_b_sptr_swigregister
sync_det_b_sptr_swigregister(sync_det_b_sptr)

sync_det_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
sync_det_b = sync_det_b.make;

class lilacsat1_frame_depack(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> lilacsat1_frame_depack_sptr

        Return a shared_ptr to a new instance of lilacsat::lilacsat1_frame_depack.

        To avoid accidental use of raw pointers, lilacsat::lilacsat1_frame_depack's constructor is in a private implementation class. lilacsat::lilacsat1_frame_depack::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.lilacsat1_frame_depack_make()

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_lilacsat1_frame_depack
    __del__ = lambda self : None;
lilacsat1_frame_depack_swigregister = _lilacsat_swig.lilacsat1_frame_depack_swigregister
lilacsat1_frame_depack_swigregister(lilacsat1_frame_depack)

def lilacsat1_frame_depack_make():
  """
    lilacsat1_frame_depack_make() -> lilacsat1_frame_depack_sptr

    Return a shared_ptr to a new instance of lilacsat::lilacsat1_frame_depack.

    To avoid accidental use of raw pointers, lilacsat::lilacsat1_frame_depack's constructor is in a private implementation class. lilacsat::lilacsat1_frame_depack::make is the public interface for creating new instances.

    Params: (NONE)
    """
  return _lilacsat_swig.lilacsat1_frame_depack_make()

class lilacsat1_frame_depack_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::lilacsat1_frame_depack)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::lilacsat1_frame_depack)> self) -> lilacsat1_frame_depack_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::lilacsat1_frame_depack)> self, lilacsat1_frame_depack p) -> lilacsat1_frame_depack_sptr
        """
        this = _lilacsat_swig.new_lilacsat1_frame_depack_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(lilacsat1_frame_depack_sptr self) -> lilacsat1_frame_depack"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_lilacsat1_frame_depack_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(lilacsat1_frame_depack_sptr self) -> lilacsat1_frame_depack_sptr

        Return a shared_ptr to a new instance of lilacsat::lilacsat1_frame_depack.

        To avoid accidental use of raw pointers, lilacsat::lilacsat1_frame_depack's constructor is in a private implementation class. lilacsat::lilacsat1_frame_depack::make is the public interface for creating new instances.

        Params: (NONE)
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_make(self)

    def history(self):
        """history(lilacsat1_frame_depack_sptr self) -> unsigned int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(lilacsat1_frame_depack_sptr self, int which, int delay)
        declare_sample_delay(lilacsat1_frame_depack_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(lilacsat1_frame_depack_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(lilacsat1_frame_depack_sptr self) -> int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(lilacsat1_frame_depack_sptr self) -> double"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_relative_rate(self)

    def start(self):
        """start(lilacsat1_frame_depack_sptr self) -> bool"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_start(self)

    def stop(self):
        """stop(lilacsat1_frame_depack_sptr self) -> bool"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(lilacsat1_frame_depack_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(lilacsat1_frame_depack_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(lilacsat1_frame_depack_sptr self) -> int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(lilacsat1_frame_depack_sptr self, int m)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(lilacsat1_frame_depack_sptr self)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(lilacsat1_frame_depack_sptr self) -> bool"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(lilacsat1_frame_depack_sptr self, int m)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(lilacsat1_frame_depack_sptr self) -> int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(lilacsat1_frame_depack_sptr self, int i) -> long"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(lilacsat1_frame_depack_sptr self, long max_output_buffer)
        set_max_output_buffer(lilacsat1_frame_depack_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(lilacsat1_frame_depack_sptr self, int i) -> long"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(lilacsat1_frame_depack_sptr self, long min_output_buffer)
        set_min_output_buffer(lilacsat1_frame_depack_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(lilacsat1_frame_depack_sptr self, int which) -> float
        pc_input_buffers_full(lilacsat1_frame_depack_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(lilacsat1_frame_depack_sptr self, int which) -> float
        pc_input_buffers_full_avg(lilacsat1_frame_depack_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(lilacsat1_frame_depack_sptr self, int which) -> float
        pc_input_buffers_full_var(lilacsat1_frame_depack_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(lilacsat1_frame_depack_sptr self, int which) -> float
        pc_output_buffers_full(lilacsat1_frame_depack_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(lilacsat1_frame_depack_sptr self, int which) -> float
        pc_output_buffers_full_avg(lilacsat1_frame_depack_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(lilacsat1_frame_depack_sptr self, int which) -> float
        pc_output_buffers_full_var(lilacsat1_frame_depack_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(lilacsat1_frame_depack_sptr self) -> float"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(lilacsat1_frame_depack_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(lilacsat1_frame_depack_sptr self)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(lilacsat1_frame_depack_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(lilacsat1_frame_depack_sptr self) -> int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(lilacsat1_frame_depack_sptr self) -> int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(lilacsat1_frame_depack_sptr self, int priority) -> int"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(lilacsat1_frame_depack_sptr self) -> std::string"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_name(self)

    def symbol_name(self):
        """symbol_name(lilacsat1_frame_depack_sptr self) -> std::string"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(lilacsat1_frame_depack_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(lilacsat1_frame_depack_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(lilacsat1_frame_depack_sptr self) -> long"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(lilacsat1_frame_depack_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(lilacsat1_frame_depack_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(lilacsat1_frame_depack_sptr self) -> std::string"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(lilacsat1_frame_depack_sptr self, std::string name)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(lilacsat1_frame_depack_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(lilacsat1_frame_depack_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(lilacsat1_frame_depack_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(lilacsat1_frame_depack_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.lilacsat1_frame_depack_sptr_message_subscribers(self, *args, **kwargs)

lilacsat1_frame_depack_sptr_swigregister = _lilacsat_swig.lilacsat1_frame_depack_sptr_swigregister
lilacsat1_frame_depack_sptr_swigregister(lilacsat1_frame_depack_sptr)

lilacsat1_frame_depack_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
lilacsat1_frame_depack = lilacsat1_frame_depack.make;

class gmsk_demod(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(float dtll_gain, int pd_N_avg, float pd_k1, float pd_k2, float vco_gain) -> gmsk_demod_sptr

        Return a shared_ptr to a new instance of lilacsat::gmsk_demod.

        To avoid accidental use of raw pointers, lilacsat::gmsk_demod's constructor is in a private implementation class. lilacsat::gmsk_demod::make is the public interface for creating new instances.

        Params: (dtll_gain, pd_N_avg, pd_k1, pd_k2, vco_gain)
        """
        return _lilacsat_swig.gmsk_demod_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _lilacsat_swig.delete_gmsk_demod
    __del__ = lambda self : None;
gmsk_demod_swigregister = _lilacsat_swig.gmsk_demod_swigregister
gmsk_demod_swigregister(gmsk_demod)

def gmsk_demod_make(*args, **kwargs):
  """
    gmsk_demod_make(float dtll_gain, int pd_N_avg, float pd_k1, float pd_k2, float vco_gain) -> gmsk_demod_sptr

    Return a shared_ptr to a new instance of lilacsat::gmsk_demod.

    To avoid accidental use of raw pointers, lilacsat::gmsk_demod's constructor is in a private implementation class. lilacsat::gmsk_demod::make is the public interface for creating new instances.

    Params: (dtll_gain, pd_N_avg, pd_k1, pd_k2, vco_gain)
    """
  return _lilacsat_swig.gmsk_demod_make(*args, **kwargs)

class gmsk_demod_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::lilacsat::gmsk_demod)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::lilacsat::gmsk_demod)> self) -> gmsk_demod_sptr
        __init__(boost::shared_ptr<(gr::lilacsat::gmsk_demod)> self, gmsk_demod p) -> gmsk_demod_sptr
        """
        this = _lilacsat_swig.new_gmsk_demod_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(gmsk_demod_sptr self) -> gmsk_demod"""
        return _lilacsat_swig.gmsk_demod_sptr___deref__(self)

    __swig_destroy__ = _lilacsat_swig.delete_gmsk_demod_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(gmsk_demod_sptr self, float dtll_gain, int pd_N_avg, float pd_k1, float pd_k2, float vco_gain) -> gmsk_demod_sptr

        Return a shared_ptr to a new instance of lilacsat::gmsk_demod.

        To avoid accidental use of raw pointers, lilacsat::gmsk_demod's constructor is in a private implementation class. lilacsat::gmsk_demod::make is the public interface for creating new instances.

        Params: (dtll_gain, pd_N_avg, pd_k1, pd_k2, vco_gain)
        """
        return _lilacsat_swig.gmsk_demod_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(gmsk_demod_sptr self) -> unsigned int"""
        return _lilacsat_swig.gmsk_demod_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(gmsk_demod_sptr self, int which, int delay)
        declare_sample_delay(gmsk_demod_sptr self, unsigned int delay)
        """
        return _lilacsat_swig.gmsk_demod_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(gmsk_demod_sptr self, int which) -> unsigned int"""
        return _lilacsat_swig.gmsk_demod_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(gmsk_demod_sptr self) -> int"""
        return _lilacsat_swig.gmsk_demod_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(gmsk_demod_sptr self) -> double"""
        return _lilacsat_swig.gmsk_demod_sptr_relative_rate(self)

    def start(self):
        """start(gmsk_demod_sptr self) -> bool"""
        return _lilacsat_swig.gmsk_demod_sptr_start(self)

    def stop(self):
        """stop(gmsk_demod_sptr self) -> bool"""
        return _lilacsat_swig.gmsk_demod_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(gmsk_demod_sptr self, unsigned int which_input) -> uint64_t"""
        return _lilacsat_swig.gmsk_demod_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(gmsk_demod_sptr self, unsigned int which_output) -> uint64_t"""
        return _lilacsat_swig.gmsk_demod_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(gmsk_demod_sptr self) -> int"""
        return _lilacsat_swig.gmsk_demod_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(gmsk_demod_sptr self, int m)"""
        return _lilacsat_swig.gmsk_demod_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(gmsk_demod_sptr self)"""
        return _lilacsat_swig.gmsk_demod_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(gmsk_demod_sptr self) -> bool"""
        return _lilacsat_swig.gmsk_demod_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(gmsk_demod_sptr self, int m)"""
        return _lilacsat_swig.gmsk_demod_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(gmsk_demod_sptr self) -> int"""
        return _lilacsat_swig.gmsk_demod_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(gmsk_demod_sptr self, int i) -> long"""
        return _lilacsat_swig.gmsk_demod_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(gmsk_demod_sptr self, long max_output_buffer)
        set_max_output_buffer(gmsk_demod_sptr self, int port, long max_output_buffer)
        """
        return _lilacsat_swig.gmsk_demod_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(gmsk_demod_sptr self, int i) -> long"""
        return _lilacsat_swig.gmsk_demod_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(gmsk_demod_sptr self, long min_output_buffer)
        set_min_output_buffer(gmsk_demod_sptr self, int port, long min_output_buffer)
        """
        return _lilacsat_swig.gmsk_demod_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(gmsk_demod_sptr self, int which) -> float
        pc_input_buffers_full(gmsk_demod_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.gmsk_demod_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(gmsk_demod_sptr self, int which) -> float
        pc_input_buffers_full_avg(gmsk_demod_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.gmsk_demod_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(gmsk_demod_sptr self, int which) -> float
        pc_input_buffers_full_var(gmsk_demod_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.gmsk_demod_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(gmsk_demod_sptr self, int which) -> float
        pc_output_buffers_full(gmsk_demod_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.gmsk_demod_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(gmsk_demod_sptr self, int which) -> float
        pc_output_buffers_full_avg(gmsk_demod_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.gmsk_demod_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(gmsk_demod_sptr self, int which) -> float
        pc_output_buffers_full_var(gmsk_demod_sptr self) -> pmt_vector_float
        """
        return _lilacsat_swig.gmsk_demod_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(gmsk_demod_sptr self) -> float"""
        return _lilacsat_swig.gmsk_demod_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(gmsk_demod_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _lilacsat_swig.gmsk_demod_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(gmsk_demod_sptr self)"""
        return _lilacsat_swig.gmsk_demod_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(gmsk_demod_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _lilacsat_swig.gmsk_demod_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(gmsk_demod_sptr self) -> int"""
        return _lilacsat_swig.gmsk_demod_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(gmsk_demod_sptr self) -> int"""
        return _lilacsat_swig.gmsk_demod_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(gmsk_demod_sptr self, int priority) -> int"""
        return _lilacsat_swig.gmsk_demod_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(gmsk_demod_sptr self) -> std::string"""
        return _lilacsat_swig.gmsk_demod_sptr_name(self)

    def symbol_name(self):
        """symbol_name(gmsk_demod_sptr self) -> std::string"""
        return _lilacsat_swig.gmsk_demod_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(gmsk_demod_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.gmsk_demod_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(gmsk_demod_sptr self) -> io_signature_sptr"""
        return _lilacsat_swig.gmsk_demod_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(gmsk_demod_sptr self) -> long"""
        return _lilacsat_swig.gmsk_demod_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(gmsk_demod_sptr self) -> basic_block_sptr"""
        return _lilacsat_swig.gmsk_demod_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(gmsk_demod_sptr self, int ninputs, int noutputs) -> bool"""
        return _lilacsat_swig.gmsk_demod_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(gmsk_demod_sptr self) -> std::string"""
        return _lilacsat_swig.gmsk_demod_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(gmsk_demod_sptr self, std::string name)"""
        return _lilacsat_swig.gmsk_demod_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(gmsk_demod_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _lilacsat_swig.gmsk_demod_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(gmsk_demod_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.gmsk_demod_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(gmsk_demod_sptr self) -> swig_int_ptr"""
        return _lilacsat_swig.gmsk_demod_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(gmsk_demod_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _lilacsat_swig.gmsk_demod_sptr_message_subscribers(self, *args, **kwargs)

gmsk_demod_sptr_swigregister = _lilacsat_swig.gmsk_demod_sptr_swigregister
gmsk_demod_sptr_swigregister(gmsk_demod_sptr)

gmsk_demod_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
gmsk_demod = gmsk_demod.make;



